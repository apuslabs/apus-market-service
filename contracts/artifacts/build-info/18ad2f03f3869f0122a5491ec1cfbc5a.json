{
	"id": "18ad2f03f3869f0122a5491ec1cfbc5a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/account1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {Context} from \"@openzeppelin/contracts/utils/Context.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\ncontract ApusToken is Context, IERC20, IERC20Metadata, IERC20Errors, Ownable {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(uint256 _initAmount) Ownable(msg.sender) {\n        _name = \"Apus Token Alpha\";\n        _symbol = \"APTa\";\n        _balances[msg.sender] = _initAmount;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/account1.sol": {
				"ApusToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/account1.sol\":1500:11299  contract ApusToken is Context, IERC20, IERC20Metadata, IERC20Errors, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/account1.sol\":1999:2166  constructor(uint256 _initAmount) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/account1.sol\":2040:2050  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/account1.sol\":2062:2088  _name = \"Apus Token Alpha\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x4170757320546f6b656e20416c70686100000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/account1.sol\":2062:2067  _name */\n  0x04\n    /* \"contracts/account1.sol\":2062:2088  _name = \"Apus Token Alpha\" */\n  swap1\n  dup2\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/account1.sol\":2098:2114  _symbol = \"APTa\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4150546100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/account1.sol\":2098:2105  _symbol */\n  0x05\n    /* \"contracts/account1.sol\":2098:2114  _symbol = \"APTa\" */\n  swap1\n  dup2\n  tag_15\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/account1.sol\":2148:2159  _initAmount */\n  dup1\n    /* \"contracts/account1.sol\":2124:2133  _balances */\n  0x01\n    /* \"contracts/account1.sol\":2124:2145  _balances[msg.sender] */\n  0x00\n    /* \"contracts/account1.sol\":2134:2144  msg.sender */\n  caller\n    /* \"contracts/account1.sol\":2124:2145  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/account1.sol\":2124:2159  _balances[msg.sender] = _initAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/account1.sol\":1999:2166  constructor(uint256 _initAmount) Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/account1.sol\":1500:11299  contract ApusToken is Context, IERC20, IERC20Metadata, IERC20Errors, Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_22:\n    /* \"#utility.yul\":490:514   */\n  tag_52\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_21\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_53:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_23:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_55\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_22\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_58\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":781:900   */\ntag_57:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_59\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_23\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1177   */\ntag_24:\n    /* \"#utility.yul\":1088:1095   */\n  0x00\n    /* \"#utility.yul\":1128:1170   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1121:1126   */\n  dup3\n    /* \"#utility.yul\":1117:1171   */\n  and\n    /* \"#utility.yul\":1106:1171   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1177   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1183:1279   */\ntag_25:\n    /* \"#utility.yul\":1220:1227   */\n  0x00\n    /* \"#utility.yul\":1249:1273   */\n  tag_62\n    /* \"#utility.yul\":1267:1272   */\n  dup3\n    /* \"#utility.yul\":1249:1273   */\n  tag_24\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1238:1273   */\n  swap1\n  pop\n    /* \"#utility.yul\":1183:1279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1285:1403   */\ntag_26:\n    /* \"#utility.yul\":1372:1396   */\n  tag_64\n    /* \"#utility.yul\":1390:1395   */\n  dup2\n    /* \"#utility.yul\":1372:1396   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1367:1370   */\n  dup3\n    /* \"#utility.yul\":1360:1397   */\n  mstore\n    /* \"#utility.yul\":1285:1403   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1409:1631   */\ntag_9:\n    /* \"#utility.yul\":1502:1506   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x20\n    /* \"#utility.yul\":1529:1538   */\n  dup3\n    /* \"#utility.yul\":1525:1543   */\n  add\n    /* \"#utility.yul\":1517:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1553:1624   */\n  tag_66\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1610:1619   */\n  dup4\n    /* \"#utility.yul\":1606:1623   */\n  add\n    /* \"#utility.yul\":1597:1603   */\n  dup5\n    /* \"#utility.yul\":1553:1624   */\n  tag_26\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1409:1631   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1637:1736   */\ntag_27:\n    /* \"#utility.yul\":1689:1695   */\n  0x00\n    /* \"#utility.yul\":1723:1728   */\n  dup2\n    /* \"#utility.yul\":1717:1729   */\n  mload\n    /* \"#utility.yul\":1707:1729   */\n  swap1\n  pop\n    /* \"#utility.yul\":1637:1736   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1742:1922   */\ntag_28:\n    /* \"#utility.yul\":1790:1867   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1787:1788   */\n  0x00\n    /* \"#utility.yul\":1780:1868   */\n  mstore\n    /* \"#utility.yul\":1887:1891   */\n  0x41\n    /* \"#utility.yul\":1884:1885   */\n  0x04\n    /* \"#utility.yul\":1877:1892   */\n  mstore\n    /* \"#utility.yul\":1911:1915   */\n  0x24\n    /* \"#utility.yul\":1908:1909   */\n  0x00\n    /* \"#utility.yul\":1901:1916   */\n  revert\n    /* \"#utility.yul\":1928:2108   */\ntag_29:\n    /* \"#utility.yul\":1976:2053   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1973:1974   */\n  0x00\n    /* \"#utility.yul\":1966:2054   */\n  mstore\n    /* \"#utility.yul\":2073:2077   */\n  0x22\n    /* \"#utility.yul\":2070:2071   */\n  0x04\n    /* \"#utility.yul\":2063:2078   */\n  mstore\n    /* \"#utility.yul\":2097:2101   */\n  0x24\n    /* \"#utility.yul\":2094:2095   */\n  0x00\n    /* \"#utility.yul\":2087:2102   */\n  revert\n    /* \"#utility.yul\":2114:2434   */\ntag_30:\n    /* \"#utility.yul\":2158:2164   */\n  0x00\n    /* \"#utility.yul\":2195:2196   */\n  0x02\n    /* \"#utility.yul\":2189:2193   */\n  dup3\n    /* \"#utility.yul\":2185:2197   */\n  div\n    /* \"#utility.yul\":2175:2197   */\n  swap1\n  pop\n    /* \"#utility.yul\":2242:2243   */\n  0x01\n    /* \"#utility.yul\":2236:2240   */\n  dup3\n    /* \"#utility.yul\":2232:2244   */\n  and\n    /* \"#utility.yul\":2263:2281   */\n  dup1\n    /* \"#utility.yul\":2253:2334   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2319:2323   */\n  0x7f\n    /* \"#utility.yul\":2311:2317   */\n  dup3\n    /* \"#utility.yul\":2307:2324   */\n  and\n    /* \"#utility.yul\":2297:2324   */\n  swap2\n  pop\n    /* \"#utility.yul\":2253:2334   */\ntag_71:\n    /* \"#utility.yul\":2381:2383   */\n  0x20\n    /* \"#utility.yul\":2373:2379   */\n  dup3\n    /* \"#utility.yul\":2370:2384   */\n  lt\n    /* \"#utility.yul\":2350:2368   */\n  dup2\n    /* \"#utility.yul\":2347:2385   */\n  sub\n    /* \"#utility.yul\":2344:2428   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2400:2418   */\n  tag_73\n  tag_29\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2344:2428   */\ntag_72:\n    /* \"#utility.yul\":2165:2434   */\n  pop\n    /* \"#utility.yul\":2114:2434   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2440:2581   */\ntag_31:\n    /* \"#utility.yul\":2489:2493   */\n  0x00\n    /* \"#utility.yul\":2512:2515   */\n  dup2\n    /* \"#utility.yul\":2504:2515   */\n  swap1\n  pop\n    /* \"#utility.yul\":2535:2538   */\n  dup2\n    /* \"#utility.yul\":2532:2533   */\n  0x00\n    /* \"#utility.yul\":2525:2539   */\n  mstore\n    /* \"#utility.yul\":2569:2573   */\n  0x20\n    /* \"#utility.yul\":2566:2567   */\n  0x00\n    /* \"#utility.yul\":2556:2574   */\n  keccak256\n    /* \"#utility.yul\":2548:2574   */\n  swap1\n  pop\n    /* \"#utility.yul\":2440:2581   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2587:2680   */\ntag_32:\n    /* \"#utility.yul\":2624:2630   */\n  0x00\n    /* \"#utility.yul\":2671:2673   */\n  0x20\n    /* \"#utility.yul\":2666:2668   */\n  0x1f\n    /* \"#utility.yul\":2659:2664   */\n  dup4\n    /* \"#utility.yul\":2655:2669   */\n  add\n    /* \"#utility.yul\":2651:2674   */\n  div\n    /* \"#utility.yul\":2641:2674   */\n  swap1\n  pop\n    /* \"#utility.yul\":2587:2680   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2686:2793   */\ntag_33:\n    /* \"#utility.yul\":2730:2738   */\n  0x00\n    /* \"#utility.yul\":2780:2785   */\n  dup3\n    /* \"#utility.yul\":2774:2778   */\n  dup3\n    /* \"#utility.yul\":2770:2786   */\n  shl\n    /* \"#utility.yul\":2749:2786   */\n  swap1\n  pop\n    /* \"#utility.yul\":2686:2793   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2799:3192   */\ntag_34:\n    /* \"#utility.yul\":2868:2874   */\n  0x00\n    /* \"#utility.yul\":2918:2919   */\n  0x08\n    /* \"#utility.yul\":2906:2916   */\n  dup4\n    /* \"#utility.yul\":2902:2920   */\n  mul\n    /* \"#utility.yul\":2941:3038   */\n  tag_78\n    /* \"#utility.yul\":2971:3037   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2960:2969   */\n  dup3\n    /* \"#utility.yul\":2941:3038   */\n  tag_33\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3059:3098   */\n  tag_79\n    /* \"#utility.yul\":3089:3097   */\n  dup7\n    /* \"#utility.yul\":3078:3087   */\n  dup4\n    /* \"#utility.yul\":3059:3098   */\n  tag_33\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3047:3098   */\n  swap6\n  pop\n    /* \"#utility.yul\":3131:3135   */\n  dup1\n    /* \"#utility.yul\":3127:3136   */\n  not\n    /* \"#utility.yul\":3120:3125   */\n  dup5\n    /* \"#utility.yul\":3116:3137   */\n  and\n    /* \"#utility.yul\":3107:3137   */\n  swap4\n  pop\n    /* \"#utility.yul\":3180:3184   */\n  dup1\n    /* \"#utility.yul\":3170:3178   */\n  dup7\n    /* \"#utility.yul\":3166:3185   */\n  and\n    /* \"#utility.yul\":3159:3164   */\n  dup5\n    /* \"#utility.yul\":3156:3186   */\n  or\n    /* \"#utility.yul\":3146:3186   */\n  swap3\n  pop\n    /* \"#utility.yul\":2875:3192   */\n  pop\n  pop\n    /* \"#utility.yul\":2799:3192   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3198:3258   */\ntag_35:\n    /* \"#utility.yul\":3226:3229   */\n  0x00\n    /* \"#utility.yul\":3247:3252   */\n  dup2\n    /* \"#utility.yul\":3240:3252   */\n  swap1\n  pop\n    /* \"#utility.yul\":3198:3258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3264:3406   */\ntag_36:\n    /* \"#utility.yul\":3314:3323   */\n  0x00\n    /* \"#utility.yul\":3347:3400   */\n  tag_82\n    /* \"#utility.yul\":3365:3399   */\n  tag_83\n    /* \"#utility.yul\":3374:3398   */\n  tag_84\n    /* \"#utility.yul\":3392:3397   */\n  dup5\n    /* \"#utility.yul\":3374:3398   */\n  tag_21\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3365:3399   */\n  tag_35\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3347:3400   */\n  tag_21\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3334:3400   */\n  swap1\n  pop\n    /* \"#utility.yul\":3264:3406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3412:3487   */\ntag_37:\n    /* \"#utility.yul\":3455:3458   */\n  0x00\n    /* \"#utility.yul\":3476:3481   */\n  dup2\n    /* \"#utility.yul\":3469:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3412:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3762   */\ntag_38:\n    /* \"#utility.yul\":3603:3642   */\n  tag_87\n    /* \"#utility.yul\":3634:3641   */\n  dup4\n    /* \"#utility.yul\":3603:3642   */\n  tag_36\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3664:3755   */\n  tag_88\n    /* \"#utility.yul\":3713:3754   */\n  tag_89\n    /* \"#utility.yul\":3737:3753   */\n  dup3\n    /* \"#utility.yul\":3713:3754   */\n  tag_37\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3698:3702   */\n  dup5\n    /* \"#utility.yul\":3692:3703   */\n  sload\n    /* \"#utility.yul\":3664:3755   */\n  tag_34\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3658:3662   */\n  dup3\n    /* \"#utility.yul\":3651:3756   */\n  sstore\n    /* \"#utility.yul\":3569:3762   */\n  pop\n    /* \"#utility.yul\":3493:3762   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3768:3841   */\ntag_39:\n    /* \"#utility.yul\":3813:3816   */\n  0x00\n    /* \"#utility.yul\":3768:3841   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3847:4036   */\ntag_40:\n    /* \"#utility.yul\":3924:3956   */\n  tag_92\n  tag_39\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3965:4030   */\n  tag_93\n    /* \"#utility.yul\":4023:4029   */\n  dup2\n    /* \"#utility.yul\":4015:4021   */\n  dup5\n    /* \"#utility.yul\":4009:4013   */\n  dup5\n    /* \"#utility.yul\":3965:4030   */\n  tag_38\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3900:4036   */\n  pop\n    /* \"#utility.yul\":3847:4036   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4042:4228   */\ntag_41:\n    /* \"#utility.yul\":4102:4222   */\ntag_95:\n    /* \"#utility.yul\":4119:4122   */\n  dup2\n    /* \"#utility.yul\":4112:4117   */\n  dup2\n    /* \"#utility.yul\":4109:4123   */\n  lt\n    /* \"#utility.yul\":4102:4222   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4173:4212   */\n  tag_98\n    /* \"#utility.yul\":4210:4211   */\n  0x00\n    /* \"#utility.yul\":4203:4208   */\n  dup3\n    /* \"#utility.yul\":4173:4212   */\n  tag_40\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4146:4147   */\n  0x01\n    /* \"#utility.yul\":4139:4144   */\n  dup2\n    /* \"#utility.yul\":4135:4148   */\n  add\n    /* \"#utility.yul\":4126:4148   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4222   */\n  jump(tag_95)\ntag_97:\n    /* \"#utility.yul\":4042:4228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4234:4777   */\ntag_42:\n    /* \"#utility.yul\":4335:4337   */\n  0x1f\n    /* \"#utility.yul\":4330:4333   */\n  dup3\n    /* \"#utility.yul\":4327:4338   */\n  gt\n    /* \"#utility.yul\":4324:4770   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4369:4407   */\n  tag_101\n    /* \"#utility.yul\":4401:4406   */\n  dup2\n    /* \"#utility.yul\":4369:4407   */\n  tag_31\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4453:4482   */\n  tag_102\n    /* \"#utility.yul\":4471:4481   */\n  dup5\n    /* \"#utility.yul\":4453:4482   */\n  tag_32\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4443:4451   */\n  dup2\n    /* \"#utility.yul\":4439:4483   */\n  add\n    /* \"#utility.yul\":4636:4638   */\n  0x20\n    /* \"#utility.yul\":4624:4634   */\n  dup6\n    /* \"#utility.yul\":4621:4639   */\n  lt\n    /* \"#utility.yul\":4618:4667   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4657:4665   */\n  dup2\n    /* \"#utility.yul\":4642:4665   */\n  swap1\n  pop\n    /* \"#utility.yul\":4618:4667   */\ntag_103:\n    /* \"#utility.yul\":4680:4760   */\n  tag_104\n    /* \"#utility.yul\":4736:4758   */\n  tag_105\n    /* \"#utility.yul\":4754:4757   */\n  dup6\n    /* \"#utility.yul\":4736:4758   */\n  tag_32\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4726:4734   */\n  dup4\n    /* \"#utility.yul\":4722:4759   */\n  add\n    /* \"#utility.yul\":4709:4720   */\n  dup3\n    /* \"#utility.yul\":4680:4760   */\n  tag_41\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4339:4770   */\n  pop\n  pop\n    /* \"#utility.yul\":4324:4770   */\ntag_100:\n    /* \"#utility.yul\":4234:4777   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4783:4900   */\ntag_43:\n    /* \"#utility.yul\":4837:4845   */\n  0x00\n    /* \"#utility.yul\":4887:4892   */\n  dup3\n    /* \"#utility.yul\":4881:4885   */\n  dup3\n    /* \"#utility.yul\":4877:4893   */\n  shr\n    /* \"#utility.yul\":4856:4893   */\n  swap1\n  pop\n    /* \"#utility.yul\":4783:4900   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4906:5075   */\ntag_44:\n    /* \"#utility.yul\":4950:4956   */\n  0x00\n    /* \"#utility.yul\":4983:5034   */\n  tag_108\n    /* \"#utility.yul\":5031:5032   */\n  0x00\n    /* \"#utility.yul\":5027:5033   */\n  not\n    /* \"#utility.yul\":5019:5024   */\n  dup5\n    /* \"#utility.yul\":5016:5017   */\n  0x08\n    /* \"#utility.yul\":5012:5025   */\n  mul\n    /* \"#utility.yul\":4983:5034   */\n  tag_43\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4979:5035   */\n  not\n    /* \"#utility.yul\":5064:5068   */\n  dup1\n    /* \"#utility.yul\":5058:5062   */\n  dup4\n    /* \"#utility.yul\":5054:5069   */\n  and\n    /* \"#utility.yul\":5044:5069   */\n  swap2\n  pop\n    /* \"#utility.yul\":4957:5075   */\n  pop\n    /* \"#utility.yul\":4906:5075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5080:5375   */\ntag_45:\n    /* \"#utility.yul\":5156:5160   */\n  0x00\n    /* \"#utility.yul\":5302:5331   */\n  tag_110\n    /* \"#utility.yul\":5327:5330   */\n  dup4\n    /* \"#utility.yul\":5321:5325   */\n  dup4\n    /* \"#utility.yul\":5302:5331   */\n  tag_44\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5294:5331   */\n  swap2\n  pop\n    /* \"#utility.yul\":5364:5367   */\n  dup3\n    /* \"#utility.yul\":5361:5362   */\n  0x02\n    /* \"#utility.yul\":5357:5368   */\n  mul\n    /* \"#utility.yul\":5351:5355   */\n  dup3\n    /* \"#utility.yul\":5348:5369   */\n  or\n    /* \"#utility.yul\":5340:5369   */\n  swap1\n  pop\n    /* \"#utility.yul\":5080:5375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5380:6775   */\ntag_14:\n    /* \"#utility.yul\":5497:5534   */\n  tag_112\n    /* \"#utility.yul\":5530:5533   */\n  dup3\n    /* \"#utility.yul\":5497:5534   */\n  tag_27\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5599:5617   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5591:5597   */\n  dup2\n    /* \"#utility.yul\":5588:5618   */\n  gt\n    /* \"#utility.yul\":5585:5641   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5621:5639   */\n  tag_114\n  tag_28\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5585:5641   */\ntag_113:\n    /* \"#utility.yul\":5665:5703   */\n  tag_115\n    /* \"#utility.yul\":5697:5701   */\n  dup3\n    /* \"#utility.yul\":5691:5702   */\n  sload\n    /* \"#utility.yul\":5665:5703   */\n  tag_30\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5750:5817   */\n  tag_116\n    /* \"#utility.yul\":5810:5816   */\n  dup3\n    /* \"#utility.yul\":5802:5808   */\n  dup3\n    /* \"#utility.yul\":5796:5800   */\n  dup6\n    /* \"#utility.yul\":5750:5817   */\n  tag_42\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5844:5845   */\n  0x00\n    /* \"#utility.yul\":5868:5872   */\n  0x20\n    /* \"#utility.yul\":5855:5872   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:5902   */\n  0x1f\n    /* \"#utility.yul\":5892:5898   */\n  dup4\n    /* \"#utility.yul\":5889:5903   */\n  gt\n    /* \"#utility.yul\":5917:5918   */\n  0x01\n    /* \"#utility.yul\":5912:6530   */\n  dup2\n  eq\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6574:6575   */\n  0x00\n    /* \"#utility.yul\":6591:6597   */\n  dup5\n    /* \"#utility.yul\":6588:6665   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6640:6649   */\n  dup3\n    /* \"#utility.yul\":6635:6638   */\n  dup8\n    /* \"#utility.yul\":6631:6650   */\n  add\n    /* \"#utility.yul\":6625:6651   */\n  mload\n    /* \"#utility.yul\":6616:6651   */\n  swap1\n  pop\n    /* \"#utility.yul\":6588:6665   */\ntag_119:\n    /* \"#utility.yul\":6691:6758   */\n  tag_120\n    /* \"#utility.yul\":6751:6757   */\n  dup6\n    /* \"#utility.yul\":6744:6749   */\n  dup3\n    /* \"#utility.yul\":6691:6758   */\n  tag_45\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6685:6689   */\n  dup7\n    /* \"#utility.yul\":6678:6759   */\n  sstore\n    /* \"#utility.yul\":6547:6769   */\n  pop\n    /* \"#utility.yul\":5882:6769   */\n  jump(tag_117)\n    /* \"#utility.yul\":5912:6530   */\ntag_118:\n    /* \"#utility.yul\":5964:5968   */\n  0x1f\n    /* \"#utility.yul\":5960:5969   */\n  not\n    /* \"#utility.yul\":5952:5958   */\n  dup5\n    /* \"#utility.yul\":5948:5970   */\n  and\n    /* \"#utility.yul\":5998:6035   */\n  tag_121\n    /* \"#utility.yul\":6030:6034   */\n  dup7\n    /* \"#utility.yul\":5998:6035   */\n  tag_31\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6057:6058   */\n  0x00\n    /* \"#utility.yul\":6071:6279   */\ntag_122:\n    /* \"#utility.yul\":6085:6092   */\n  dup3\n    /* \"#utility.yul\":6082:6083   */\n  dup2\n    /* \"#utility.yul\":6079:6093   */\n  lt\n    /* \"#utility.yul\":6071:6279   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":6164:6173   */\n  dup5\n    /* \"#utility.yul\":6159:6162   */\n  dup10\n    /* \"#utility.yul\":6155:6174   */\n  add\n    /* \"#utility.yul\":6149:6175   */\n  mload\n    /* \"#utility.yul\":6141:6147   */\n  dup3\n    /* \"#utility.yul\":6134:6176   */\n  sstore\n    /* \"#utility.yul\":6215:6216   */\n  0x01\n    /* \"#utility.yul\":6207:6213   */\n  dup3\n    /* \"#utility.yul\":6203:6217   */\n  add\n    /* \"#utility.yul\":6193:6217   */\n  swap2\n  pop\n    /* \"#utility.yul\":6262:6264   */\n  0x20\n    /* \"#utility.yul\":6251:6260   */\n  dup6\n    /* \"#utility.yul\":6247:6265   */\n  add\n    /* \"#utility.yul\":6234:6265   */\n  swap5\n  pop\n    /* \"#utility.yul\":6108:6112   */\n  0x20\n    /* \"#utility.yul\":6105:6106   */\n  dup2\n    /* \"#utility.yul\":6101:6113   */\n  add\n    /* \"#utility.yul\":6096:6113   */\n  swap1\n  pop\n    /* \"#utility.yul\":6071:6279   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":6307:6313   */\n  dup7\n    /* \"#utility.yul\":6298:6305   */\n  dup4\n    /* \"#utility.yul\":6295:6314   */\n  lt\n    /* \"#utility.yul\":6292:6471   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6365:6374   */\n  dup5\n    /* \"#utility.yul\":6360:6363   */\n  dup10\n    /* \"#utility.yul\":6356:6375   */\n  add\n    /* \"#utility.yul\":6350:6376   */\n  mload\n    /* \"#utility.yul\":6408:6456   */\n  tag_126\n    /* \"#utility.yul\":6450:6454   */\n  0x1f\n    /* \"#utility.yul\":6442:6448   */\n  dup10\n    /* \"#utility.yul\":6438:6455   */\n  and\n    /* \"#utility.yul\":6427:6436   */\n  dup3\n    /* \"#utility.yul\":6408:6456   */\n  tag_44\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6400:6406   */\n  dup4\n    /* \"#utility.yul\":6393:6457   */\n  sstore\n    /* \"#utility.yul\":6315:6471   */\n  pop\n    /* \"#utility.yul\":6292:6471   */\ntag_125:\n    /* \"#utility.yul\":6517:6518   */\n  0x01\n    /* \"#utility.yul\":6513:6514   */\n  0x02\n    /* \"#utility.yul\":6505:6511   */\n  dup9\n    /* \"#utility.yul\":6501:6515   */\n  mul\n    /* \"#utility.yul\":6497:6519   */\n  add\n    /* \"#utility.yul\":6491:6495   */\n  dup9\n    /* \"#utility.yul\":6484:6520   */\n  sstore\n    /* \"#utility.yul\":5919:6530   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5882:6769   */\ntag_117:\n  pop\n    /* \"#utility.yul\":5472:6775   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5380:6775   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/account1.sol\":1500:11299  contract ApusToken is Context, IERC20, IERC20Metadata, IERC20Errors, Ownable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/account1.sol\":1500:11299  contract ApusToken is Context, IERC20, IERC20Metadata, IERC20Errors, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/account1.sol\":2231:2320  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/account1.sol\":4450:4636  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/account1.sol\":3301:3398  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/account1.sol\":5196:5440  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/account1.sol\":3159:3241  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/account1.sol\":3456:3572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/account1.sol\":2433:2526  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/account1.sol\":3767:3945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/account1.sol\":4003:4143  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/account1.sol\":2231:2320  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"contracts/account1.sol\":2276:2289  string memory */\n      0x60\n        /* \"contracts/account1.sol\":2308:2313  _name */\n      0x04\n        /* \"contracts/account1.sol\":2301:2313  return _name */\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/account1.sol\":2231:2320  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/account1.sol\":4450:4636  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_23:\n        /* \"contracts/account1.sol\":4523:4527  bool */\n      0x00\n        /* \"contracts/account1.sol\":4539:4552  address owner */\n      dup1\n        /* \"contracts/account1.sol\":4555:4567  _msgSender() */\n      tag_73\n        /* \"contracts/account1.sol\":4555:4565  _msgSender */\n      tag_74\n        /* \"contracts/account1.sol\":4555:4567  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/account1.sol\":4539:4567  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/account1.sol\":4577:4608  _approve(owner, spender, value) */\n      tag_75\n        /* \"contracts/account1.sol\":4586:4591  owner */\n      dup2\n        /* \"contracts/account1.sol\":4593:4600  spender */\n      dup6\n        /* \"contracts/account1.sol\":4602:4607  value */\n      dup6\n        /* \"contracts/account1.sol\":4577:4585  _approve */\n      tag_76\n        /* \"contracts/account1.sol\":4577:4608  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/account1.sol\":4625:4629  true */\n      0x01\n        /* \"contracts/account1.sol\":4618:4629  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/account1.sol\":4450:4636  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/account1.sol\":3301:3398  function totalSupply() public view virtual returns (uint256) {... */\n    tag_27:\n        /* \"contracts/account1.sol\":3353:3360  uint256 */\n      0x00\n        /* \"contracts/account1.sol\":3379:3391  _totalSupply */\n      sload(0x03)\n        /* \"contracts/account1.sol\":3372:3391  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/account1.sol\":3301:3398  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/account1.sol\":5196:5440  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"contracts/account1.sol\":5283:5287  bool */\n      0x00\n        /* \"contracts/account1.sol\":5299:5314  address spender */\n      dup1\n        /* \"contracts/account1.sol\":5317:5329  _msgSender() */\n      tag_79\n        /* \"contracts/account1.sol\":5317:5327  _msgSender */\n      tag_74\n        /* \"contracts/account1.sol\":5317:5329  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/account1.sol\":5299:5329  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/account1.sol\":5339:5376  _spendAllowance(from, spender, value) */\n      tag_80\n        /* \"contracts/account1.sol\":5355:5359  from */\n      dup6\n        /* \"contracts/account1.sol\":5361:5368  spender */\n      dup3\n        /* \"contracts/account1.sol\":5370:5375  value */\n      dup6\n        /* \"contracts/account1.sol\":5339:5354  _spendAllowance */\n      tag_81\n        /* \"contracts/account1.sol\":5339:5376  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"contracts/account1.sol\":5386:5412  _transfer(from, to, value) */\n      tag_82\n        /* \"contracts/account1.sol\":5396:5400  from */\n      dup6\n        /* \"contracts/account1.sol\":5402:5404  to */\n      dup6\n        /* \"contracts/account1.sol\":5406:5411  value */\n      dup6\n        /* \"contracts/account1.sol\":5386:5395  _transfer */\n      tag_83\n        /* \"contracts/account1.sol\":5386:5412  _transfer(from, to, value) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/account1.sol\":5429:5433  true */\n      0x01\n        /* \"contracts/account1.sol\":5422:5433  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/account1.sol\":5196:5440  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/account1.sol\":3159:3241  function decimals() public view virtual returns (uint8) {... */\n    tag_36:\n        /* \"contracts/account1.sol\":3208:3213  uint8 */\n      0x00\n        /* \"contracts/account1.sol\":3232:3234  18 */\n      0x12\n        /* \"contracts/account1.sol\":3225:3234  return 18 */\n      swap1\n      pop\n        /* \"contracts/account1.sol\":3159:3241  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/account1.sol\":3456:3572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_42:\n        /* \"contracts/account1.sol\":3521:3528  uint256 */\n      0x00\n        /* \"contracts/account1.sol\":3547:3556  _balances */\n      0x01\n        /* \"contracts/account1.sol\":3547:3565  _balances[account] */\n      0x00\n        /* \"contracts/account1.sol\":3557:3564  account */\n      dup4\n        /* \"contracts/account1.sol\":3547:3565  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/account1.sol\":3540:3565  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/account1.sol\":3456:3572  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/account1.sol\":2433:2526  function symbol() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"contracts/account1.sol\":2480:2493  string memory */\n      0x60\n        /* \"contracts/account1.sol\":2512:2519  _symbol */\n      0x05\n        /* \"contracts/account1.sol\":2505:2519  return _symbol */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_67\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_67\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/account1.sol\":2433:2526  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/account1.sol\":3767:3945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"contracts/account1.sol\":3836:3840  bool */\n      0x00\n        /* \"contracts/account1.sol\":3852:3865  address owner */\n      dup1\n        /* \"contracts/account1.sol\":3868:3880  _msgSender() */\n      tag_100\n        /* \"contracts/account1.sol\":3868:3878  _msgSender */\n      tag_74\n        /* \"contracts/account1.sol\":3868:3880  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/account1.sol\":3852:3880  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/account1.sol\":3890:3917  _transfer(owner, to, value) */\n      tag_101\n        /* \"contracts/account1.sol\":3900:3905  owner */\n      dup2\n        /* \"contracts/account1.sol\":3907:3909  to */\n      dup6\n        /* \"contracts/account1.sol\":3911:3916  value */\n      dup6\n        /* \"contracts/account1.sol\":3890:3899  _transfer */\n      tag_83\n        /* \"contracts/account1.sol\":3890:3917  _transfer(owner, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/account1.sol\":3934:3938  true */\n      0x01\n        /* \"contracts/account1.sol\":3927:3938  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/account1.sol\":3767:3945  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/account1.sol\":4003:4143  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_60:\n        /* \"contracts/account1.sol\":4083:4090  uint256 */\n      0x00\n        /* \"contracts/account1.sol\":4109:4120  _allowances */\n      0x02\n        /* \"contracts/account1.sol\":4109:4127  _allowances[owner] */\n      0x00\n        /* \"contracts/account1.sol\":4121:4126  owner */\n      dup5\n        /* \"contracts/account1.sol\":4109:4127  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/account1.sol\":4109:4136  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/account1.sol\":4128:4135  spender */\n      dup4\n        /* \"contracts/account1.sol\":4109:4136  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/account1.sol\":4102:4136  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/account1.sol\":4003:4143  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/account1.sol\":9146:9274  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_76:\n        /* \"contracts/account1.sol\":9230:9267  _approve(owner, spender, value, true) */\n      tag_111\n        /* \"contracts/account1.sol\":9239:9244  owner */\n      dup4\n        /* \"contracts/account1.sol\":9246:9253  spender */\n      dup4\n        /* \"contracts/account1.sol\":9255:9260  value */\n      dup4\n        /* \"contracts/account1.sol\":9262:9266  true */\n      0x01\n        /* \"contracts/account1.sol\":9230:9238  _approve */\n      tag_112\n        /* \"contracts/account1.sol\":9230:9267  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/account1.sol\":9146:9274  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/account1.sol\":10820:11297  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_81:\n        /* \"contracts/account1.sol\":10919:10943  uint256 currentAllowance */\n      0x00\n        /* \"contracts/account1.sol\":10946:10971  allowance(owner, spender) */\n      tag_114\n        /* \"contracts/account1.sol\":10956:10961  owner */\n      dup5\n        /* \"contracts/account1.sol\":10963:10970  spender */\n      dup5\n        /* \"contracts/account1.sol\":10946:10955  allowance */\n      tag_60\n        /* \"contracts/account1.sol\":10946:10971  allowance(owner, spender) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/account1.sol\":10919:10971  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/account1.sol\":11005:11022  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/account1.sol\":10985:11001  currentAllowance */\n      dup2\n        /* \"contracts/account1.sol\":10985:11022  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/account1.sol\":10981:11291  if (currentAllowance != type(uint256).max) {... */\n      tag_115\n      jumpi\n        /* \"contracts/account1.sol\":11061:11066  value */\n      dup2\n        /* \"contracts/account1.sol\":11042:11058  currentAllowance */\n      dup2\n        /* \"contracts/account1.sol\":11042:11066  currentAllowance < value */\n      lt\n        /* \"contracts/account1.sol\":11038:11168  if (currentAllowance < value) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"contracts/account1.sol\":11120:11127  spender */\n      dup3\n        /* \"contracts/account1.sol\":11129:11145  currentAllowance */\n      dup2\n        /* \"contracts/account1.sol\":11147:11152  value */\n      dup4\n        /* \"contracts/account1.sol\":11093:11153  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/account1.sol\":11038:11168  if (currentAllowance < value) {... */\n    tag_116:\n        /* \"contracts/account1.sol\":11209:11266  _approve(owner, spender, currentAllowance - value, false) */\n      tag_119\n        /* \"contracts/account1.sol\":11218:11223  owner */\n      dup5\n        /* \"contracts/account1.sol\":11225:11232  spender */\n      dup5\n        /* \"contracts/account1.sol\":11253:11258  value */\n      dup5\n        /* \"contracts/account1.sol\":11234:11250  currentAllowance */\n      dup5\n        /* \"contracts/account1.sol\":11234:11258  currentAllowance - value */\n      sub\n        /* \"contracts/account1.sol\":11260:11265  false */\n      0x00\n        /* \"contracts/account1.sol\":11209:11217  _approve */\n      tag_112\n        /* \"contracts/account1.sol\":11209:11266  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/account1.sol\":10981:11291  if (currentAllowance != type(uint256).max) {... */\n    tag_115:\n        /* \"contracts/account1.sol\":10909:11297  {... */\n      pop\n        /* \"contracts/account1.sol\":10820:11297  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/account1.sol\":5813:6113  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_83:\n        /* \"contracts/account1.sol\":5912:5913  0 */\n      0x00\n        /* \"contracts/account1.sol\":5896:5914  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/account1.sol\":5896:5900  from */\n      dup4\n        /* \"contracts/account1.sol\":5896:5914  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/account1.sol\":5892:5978  if (from == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"contracts/account1.sol\":5964:5965  0 */\n      0x00\n        /* \"contracts/account1.sol\":5937:5967  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/account1.sol\":5892:5978  if (from == address(0)) {... */\n    tag_121:\n        /* \"contracts/account1.sol\":6005:6006  0 */\n      0x00\n        /* \"contracts/account1.sol\":5991:6007  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/account1.sol\":5991:5993  to */\n      dup3\n        /* \"contracts/account1.sol\":5991:6007  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/account1.sol\":5987:6073  if (to == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"contracts/account1.sol\":6059:6060  0 */\n      0x00\n        /* \"contracts/account1.sol\":6030:6062  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/account1.sol\":5987:6073  if (to == address(0)) {... */\n    tag_123:\n        /* \"contracts/account1.sol\":6082:6106  _update(from, to, value) */\n      tag_125\n        /* \"contracts/account1.sol\":6090:6094  from */\n      dup4\n        /* \"contracts/account1.sol\":6096:6098  to */\n      dup4\n        /* \"contracts/account1.sol\":6100:6105  value */\n      dup4\n        /* \"contracts/account1.sol\":6082:6089  _update */\n      tag_126\n        /* \"contracts/account1.sol\":6082:6106  _update(from, to, value) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/account1.sol\":5813:6113  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_47\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/account1.sol\":10106:10538  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_112:\n        /* \"contracts/account1.sol\":10235:10236  0 */\n      0x00\n        /* \"contracts/account1.sol\":10218:10237  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/account1.sol\":10218:10223  owner */\n      dup5\n        /* \"contracts/account1.sol\":10218:10237  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/account1.sol\":10214:10303  if (owner == address(0)) {... */\n      tag_135\n      jumpi\n        /* \"contracts/account1.sol\":10289:10290  0 */\n      0x00\n        /* \"contracts/account1.sol\":10260:10292  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/account1.sol\":10214:10303  if (owner == address(0)) {... */\n    tag_135:\n        /* \"contracts/account1.sol\":10335:10336  0 */\n      0x00\n        /* \"contracts/account1.sol\":10316:10337  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/account1.sol\":10316:10323  spender */\n      dup4\n        /* \"contracts/account1.sol\":10316:10337  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/account1.sol\":10312:10402  if (spender == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"contracts/account1.sol\":10388:10389  0 */\n      0x00\n        /* \"contracts/account1.sol\":10360:10391  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/account1.sol\":10312:10402  if (spender == address(0)) {... */\n    tag_137:\n        /* \"contracts/account1.sol\":10441:10446  value */\n      dup2\n        /* \"contracts/account1.sol\":10411:10422  _allowances */\n      0x02\n        /* \"contracts/account1.sol\":10411:10429  _allowances[owner] */\n      0x00\n        /* \"contracts/account1.sol\":10423:10428  owner */\n      dup7\n        /* \"contracts/account1.sol\":10411:10429  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/account1.sol\":10411:10438  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/account1.sol\":10430:10437  spender */\n      dup6\n        /* \"contracts/account1.sol\":10411:10438  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/account1.sol\":10411:10446  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/account1.sol\":10460:10469  emitEvent */\n      dup1\n        /* \"contracts/account1.sol\":10456:10532  if (emitEvent) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/account1.sol\":10506:10513  spender */\n      dup3\n        /* \"contracts/account1.sol\":10490:10521  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/account1.sol\":10499:10504  owner */\n      dup5\n        /* \"contracts/account1.sol\":10490:10521  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/account1.sol\":10515:10520  value */\n      dup5\n        /* \"contracts/account1.sol\":10490:10521  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/account1.sol\":10456:10532  if (emitEvent) {... */\n    tag_139:\n        /* \"contracts/account1.sol\":10106:10538  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/account1.sol\":6428:7535  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_126:\n        /* \"contracts/account1.sol\":6533:6534  0 */\n      0x00\n        /* \"contracts/account1.sol\":6517:6535  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/account1.sol\":6517:6521  from */\n      dup4\n        /* \"contracts/account1.sol\":6517:6535  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/account1.sol\":6513:7053  if (from == address(0)) {... */\n      tag_142\n      jumpi\n        /* \"contracts/account1.sol\":6669:6674  value */\n      dup1\n        /* \"contracts/account1.sol\":6653:6665  _totalSupply */\n      0x03\n      0x00\n        /* \"contracts/account1.sol\":6653:6674  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/account1.sol\":6513:7053  if (from == address(0)) {... */\n      jump(tag_145)\n    tag_142:\n        /* \"contracts/account1.sol\":6705:6724  uint256 fromBalance */\n      0x00\n        /* \"contracts/account1.sol\":6727:6736  _balances */\n      0x01\n        /* \"contracts/account1.sol\":6727:6742  _balances[from] */\n      0x00\n        /* \"contracts/account1.sol\":6737:6741  from */\n      dup6\n        /* \"contracts/account1.sol\":6727:6742  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/account1.sol\":6705:6742  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/account1.sol\":6774:6779  value */\n      dup2\n        /* \"contracts/account1.sol\":6760:6771  fromBalance */\n      dup2\n        /* \"contracts/account1.sol\":6760:6779  fromBalance < value */\n      lt\n        /* \"contracts/account1.sol\":6756:6871  if (fromBalance < value) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"contracts/account1.sol\":6831:6835  from */\n      dup4\n        /* \"contracts/account1.sol\":6837:6848  fromBalance */\n      dup2\n        /* \"contracts/account1.sol\":6850:6855  value */\n      dup4\n        /* \"contracts/account1.sol\":6806:6856  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/account1.sol\":6756:6871  if (fromBalance < value) {... */\n    tag_146:\n        /* \"contracts/account1.sol\":7023:7028  value */\n      dup2\n        /* \"contracts/account1.sol\":7009:7020  fromBalance */\n      dup2\n        /* \"contracts/account1.sol\":7009:7028  fromBalance - value */\n      sub\n        /* \"contracts/account1.sol\":6991:7000  _balances */\n      0x01\n        /* \"contracts/account1.sol\":6991:7006  _balances[from] */\n      0x00\n        /* \"contracts/account1.sol\":7001:7005  from */\n      dup7\n        /* \"contracts/account1.sol\":6991:7006  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/account1.sol\":6991:7028  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/account1.sol\":6691:7053  {... */\n      pop\n        /* \"contracts/account1.sol\":6513:7053  if (from == address(0)) {... */\n    tag_145:\n        /* \"contracts/account1.sol\":7081:7082  0 */\n      0x00\n        /* \"contracts/account1.sol\":7067:7083  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/account1.sol\":7067:7069  to */\n      dup3\n        /* \"contracts/account1.sol\":7067:7083  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/account1.sol\":7063:7488  if (to == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"contracts/account1.sol\":7246:7251  value */\n      dup1\n        /* \"contracts/account1.sol\":7230:7242  _totalSupply */\n      0x03\n      0x00\n        /* \"contracts/account1.sol\":7230:7251  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/account1.sol\":7063:7488  if (to == address(0)) {... */\n      jump(tag_149)\n    tag_148:\n        /* \"contracts/account1.sol\":7458:7463  value */\n      dup1\n        /* \"contracts/account1.sol\":7441:7450  _balances */\n      0x01\n        /* \"contracts/account1.sol\":7441:7454  _balances[to] */\n      0x00\n        /* \"contracts/account1.sol\":7451:7453  to */\n      dup5\n        /* \"contracts/account1.sol\":7441:7454  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/account1.sol\":7441:7463  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/account1.sol\":7063:7488  if (to == address(0)) {... */\n    tag_149:\n        /* \"contracts/account1.sol\":7518:7520  to */\n      dup2\n        /* \"contracts/account1.sol\":7503:7528  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/account1.sol\":7512:7516  from */\n      dup4\n        /* \"contracts/account1.sol\":7503:7528  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/account1.sol\":7522:7527  value */\n      dup4\n        /* \"contracts/account1.sol\":7503:7528  Transfer(from, to, value) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/account1.sol\":6428:7535  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_151:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_152:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_153:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_178:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_178)\n    tag_180:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_154:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_155:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_183\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_151\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":818:889   */\n      tag_184\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_152\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_185\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_153\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":988:1017   */\n      tag_186\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_154\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_19:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_188\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_155\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_157:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_159:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_160:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_194\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_159\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_161:\n        /* \"#utility.yul\":1983:2007   */\n      tag_196\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_160\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_197:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_162:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_199\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_161\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_163:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_164:\n        /* \"#utility.yul\":2339:2363   */\n      tag_202\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_163\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_203:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_165:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_205\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_164\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_22:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_208\n      tag_157\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2632:2751   */\n    tag_207:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_209\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_162\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_210\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_165\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_166:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_167:\n        /* \"#utility.yul\":3196:3217   */\n      tag_213\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_166\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_25:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_215\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_167\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_168:\n        /* \"#utility.yul\":3533:3557   */\n      tag_217\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_163\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_29:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_219\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_168\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_32:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_222\n      tag_157\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3908:4027   */\n    tag_221:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_223\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_162\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_224\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_162\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_225\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_165\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_169:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_170:\n        /* \"#utility.yul\":4598:4620   */\n      tag_228\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_169\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_38:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_230\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_170\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_41:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_233\n      tag_157\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4929:5048   */\n    tag_232:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_234\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_162\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5306   */\n    tag_171:\n        /* \"#utility.yul\":5275:5299   */\n      tag_236\n        /* \"#utility.yul\":5293:5298   */\n      dup2\n        /* \"#utility.yul\":5275:5299   */\n      tag_160\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5270:5273   */\n      dup3\n        /* \"#utility.yul\":5263:5300   */\n      mstore\n        /* \"#utility.yul\":5188:5306   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5534   */\n    tag_49:\n        /* \"#utility.yul\":5405:5409   */\n      0x00\n        /* \"#utility.yul\":5443:5445   */\n      0x20\n        /* \"#utility.yul\":5432:5441   */\n      dup3\n        /* \"#utility.yul\":5428:5446   */\n      add\n        /* \"#utility.yul\":5420:5446   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5527   */\n      tag_238\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5513:5522   */\n      dup4\n        /* \"#utility.yul\":5509:5526   */\n      add\n        /* \"#utility.yul\":5500:5506   */\n      dup5\n        /* \"#utility.yul\":5456:5527   */\n      tag_171\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5312:5534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:6014   */\n    tag_59:\n        /* \"#utility.yul\":5608:5614   */\n      0x00\n        /* \"#utility.yul\":5616:5622   */\n      dup1\n        /* \"#utility.yul\":5665:5667   */\n      0x40\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5644:5651   */\n      dup6\n        /* \"#utility.yul\":5640:5663   */\n      sub\n        /* \"#utility.yul\":5636:5668   */\n      slt\n        /* \"#utility.yul\":5633:5752   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":5671:5750   */\n      tag_241\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5633:5752   */\n    tag_240:\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5816:5869   */\n      tag_242\n        /* \"#utility.yul\":5861:5868   */\n      dup6\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5841:5850   */\n      dup7\n        /* \"#utility.yul\":5837:5859   */\n      add\n        /* \"#utility.yul\":5816:5869   */\n      tag_162\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5806:5869   */\n      swap3\n      pop\n        /* \"#utility.yul\":5762:5879   */\n      pop\n        /* \"#utility.yul\":5918:5920   */\n      0x20\n        /* \"#utility.yul\":5944:5997   */\n      tag_243\n        /* \"#utility.yul\":5989:5996   */\n      dup6\n        /* \"#utility.yul\":5980:5986   */\n      dup3\n        /* \"#utility.yul\":5969:5978   */\n      dup7\n        /* \"#utility.yul\":5965:5987   */\n      add\n        /* \"#utility.yul\":5944:5997   */\n      tag_162\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5934:5997   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6007   */\n      pop\n        /* \"#utility.yul\":5540:6014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6200   */\n    tag_172:\n        /* \"#utility.yul\":6068:6145   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6065:6066   */\n      0x00\n        /* \"#utility.yul\":6058:6146   */\n      mstore\n        /* \"#utility.yul\":6165:6169   */\n      0x22\n        /* \"#utility.yul\":6162:6163   */\n      0x04\n        /* \"#utility.yul\":6155:6170   */\n      mstore\n        /* \"#utility.yul\":6189:6193   */\n      0x24\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6194   */\n      revert\n        /* \"#utility.yul\":6206:6526   */\n    tag_67:\n        /* \"#utility.yul\":6250:6256   */\n      0x00\n        /* \"#utility.yul\":6287:6288   */\n      0x02\n        /* \"#utility.yul\":6281:6285   */\n      dup3\n        /* \"#utility.yul\":6277:6289   */\n      div\n        /* \"#utility.yul\":6267:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6335   */\n      0x01\n        /* \"#utility.yul\":6328:6332   */\n      dup3\n        /* \"#utility.yul\":6324:6336   */\n      and\n        /* \"#utility.yul\":6355:6373   */\n      dup1\n        /* \"#utility.yul\":6345:6426   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6411:6415   */\n      0x7f\n        /* \"#utility.yul\":6403:6409   */\n      dup3\n        /* \"#utility.yul\":6399:6416   */\n      and\n        /* \"#utility.yul\":6389:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6345:6426   */\n    tag_246:\n        /* \"#utility.yul\":6473:6475   */\n      0x20\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6462:6476   */\n      lt\n        /* \"#utility.yul\":6442:6460   */\n      dup2\n        /* \"#utility.yul\":6439:6477   */\n      sub\n        /* \"#utility.yul\":6436:6520   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":6492:6510   */\n      tag_248\n      tag_172\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6436:6520   */\n    tag_247:\n        /* \"#utility.yul\":6257:6526   */\n      pop\n        /* \"#utility.yul\":6206:6526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6974   */\n    tag_118:\n        /* \"#utility.yul\":6681:6685   */\n      0x00\n        /* \"#utility.yul\":6719:6721   */\n      0x60\n        /* \"#utility.yul\":6708:6717   */\n      dup3\n        /* \"#utility.yul\":6704:6722   */\n      add\n        /* \"#utility.yul\":6696:6722   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:6803   */\n      tag_250\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6789:6798   */\n      dup4\n        /* \"#utility.yul\":6785:6802   */\n      add\n        /* \"#utility.yul\":6776:6782   */\n      dup7\n        /* \"#utility.yul\":6732:6803   */\n      tag_171\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6813:6885   */\n      tag_251\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6870:6879   */\n      dup4\n        /* \"#utility.yul\":6866:6884   */\n      add\n        /* \"#utility.yul\":6857:6863   */\n      dup6\n        /* \"#utility.yul\":6813:6885   */\n      tag_168\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6895:6967   */\n      tag_252\n        /* \"#utility.yul\":6963:6965   */\n      0x40\n        /* \"#utility.yul\":6952:6961   */\n      dup4\n        /* \"#utility.yul\":6948:6966   */\n      add\n        /* \"#utility.yul\":6939:6945   */\n      dup5\n        /* \"#utility.yul\":6895:6967   */\n      tag_168\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6532:6974   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7160   */\n    tag_173:\n        /* \"#utility.yul\":7028:7105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7025:7026   */\n      0x00\n        /* \"#utility.yul\":7018:7106   */\n      mstore\n        /* \"#utility.yul\":7125:7129   */\n      0x11\n        /* \"#utility.yul\":7122:7123   */\n      0x04\n        /* \"#utility.yul\":7115:7130   */\n      mstore\n        /* \"#utility.yul\":7149:7153   */\n      0x24\n        /* \"#utility.yul\":7146:7147   */\n      0x00\n        /* \"#utility.yul\":7139:7154   */\n      revert\n        /* \"#utility.yul\":7166:7357   */\n    tag_144:\n        /* \"#utility.yul\":7206:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_255\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_163\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_256\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_163\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7302:7303   */\n      dup3\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7295:7304   */\n      add\n        /* \"#utility.yul\":7288:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7326   */\n      dup1\n        /* \"#utility.yul\":7320:7321   */\n      dup3\n        /* \"#utility.yul\":7317:7327   */\n      gt\n        /* \"#utility.yul\":7314:7350   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":7330:7348   */\n      tag_258\n      tag_173\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7314:7350   */\n    tag_257:\n        /* \"#utility.yul\":7166:7357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122026becd99efa2f95bca67cfd88b013cad2fc0aa27553f859228de798bf56ab80a64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_475": {
									"entryPoint": null,
									"id": 475,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 403,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:6",
										"nodeType": "YulBlock",
										"src": "0:6778:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "608:80:6",
													"nodeType": "YulBlock",
													"src": "608:80:6",
													"statements": [
														{
															"nativeSrc": "618:22:6",
															"nodeType": "YulAssignment",
															"src": "618:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:6"
																},
																"nativeSrc": "627:13:6",
																"nodeType": "YulFunctionCall",
																"src": "627:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:6"
																},
																"nativeSrc": "649:33:6",
																"nodeType": "YulFunctionCall",
																"src": "649:33:6"
															},
															"nativeSrc": "649:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:6",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:6",
														"nodeType": "YulTypedName",
														"src": "594:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:6",
														"nodeType": "YulTypedName",
														"src": "602:5:6",
														"type": ""
													}
												],
												"src": "545:143:6"
											},
											{
												"body": {
													"nativeSrc": "771:274:6",
													"nodeType": "YulBlock",
													"src": "771:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:6",
																"nodeType": "YulBlock",
																"src": "817:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:6"
																			},
																			"nativeSrc": "819:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:6"
																		},
																		"nativeSrc": "819:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:6"
																		},
																		"nativeSrc": "788:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:6",
																		"nodeType": "YulLiteral",
																		"src": "813:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:6"
																},
																"nativeSrc": "784:32:6",
																"nodeType": "YulFunctionCall",
																"src": "784:32:6"
															},
															"nativeSrc": "781:119:6",
															"nodeType": "YulIf",
															"src": "781:119:6"
														},
														{
															"nativeSrc": "910:128:6",
															"nodeType": "YulBlock",
															"src": "910:128:6",
															"statements": [
																{
																	"nativeSrc": "925:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:6",
																		"nodeType": "YulLiteral",
																		"src": "939:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:6",
																			"nodeType": "YulTypedName",
																			"src": "929:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:6",
																	"nodeType": "YulAssignment",
																	"src": "954:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:6"
																				},
																				"nativeSrc": "996:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:6"
																		},
																		"nativeSrc": "964:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:6",
														"nodeType": "YulTypedName",
														"src": "741:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:6",
														"nodeType": "YulTypedName",
														"src": "752:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:6",
														"nodeType": "YulTypedName",
														"src": "764:6:6",
														"type": ""
													}
												],
												"src": "694:351:6"
											},
											{
												"body": {
													"nativeSrc": "1096:81:6",
													"nodeType": "YulBlock",
													"src": "1096:81:6",
													"statements": [
														{
															"nativeSrc": "1106:65:6",
															"nodeType": "YulAssignment",
															"src": "1106:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1121:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1121:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1128:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1128:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1117:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:6"
																},
																"nativeSrc": "1117:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1117:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1106:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1106:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1051:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:6",
														"nodeType": "YulTypedName",
														"src": "1078:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1088:7:6",
														"nodeType": "YulTypedName",
														"src": "1088:7:6",
														"type": ""
													}
												],
												"src": "1051:126:6"
											},
											{
												"body": {
													"nativeSrc": "1228:51:6",
													"nodeType": "YulBlock",
													"src": "1228:51:6",
													"statements": [
														{
															"nativeSrc": "1238:35:6",
															"nodeType": "YulAssignment",
															"src": "1238:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1267:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1267:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1249:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1249:17:6"
																},
																"nativeSrc": "1249:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1249:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1238:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1183:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1210:5:6",
														"nodeType": "YulTypedName",
														"src": "1210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1220:7:6",
														"nodeType": "YulTypedName",
														"src": "1220:7:6",
														"type": ""
													}
												],
												"src": "1183:96:6"
											},
											{
												"body": {
													"nativeSrc": "1350:53:6",
													"nodeType": "YulBlock",
													"src": "1350:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1367:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1390:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1390:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1372:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1372:17:6"
																		},
																		"nativeSrc": "1372:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1372:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1360:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:6"
																},
																"nativeSrc": "1360:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1360:37:6"
															},
															"nativeSrc": "1360:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1360:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1285:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1338:5:6",
														"nodeType": "YulTypedName",
														"src": "1338:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1345:3:6",
														"nodeType": "YulTypedName",
														"src": "1345:3:6",
														"type": ""
													}
												],
												"src": "1285:118:6"
											},
											{
												"body": {
													"nativeSrc": "1507:124:6",
													"nodeType": "YulBlock",
													"src": "1507:124:6",
													"statements": [
														{
															"nativeSrc": "1517:26:6",
															"nodeType": "YulAssignment",
															"src": "1517:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1529:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1529:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1540:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1525:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1525:3:6"
																},
																"nativeSrc": "1525:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1525:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1517:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1517:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1597:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1597:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1610:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1621:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1606:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:6"
																		},
																		"nativeSrc": "1606:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1553:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1553:43:6"
																},
																"nativeSrc": "1553:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1553:71:6"
															},
															"nativeSrc": "1553:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1553:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1409:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1479:9:6",
														"nodeType": "YulTypedName",
														"src": "1479:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1491:6:6",
														"nodeType": "YulTypedName",
														"src": "1491:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1502:4:6",
														"nodeType": "YulTypedName",
														"src": "1502:4:6",
														"type": ""
													}
												],
												"src": "1409:222:6"
											},
											{
												"body": {
													"nativeSrc": "1696:40:6",
													"nodeType": "YulBlock",
													"src": "1696:40:6",
													"statements": [
														{
															"nativeSrc": "1707:22:6",
															"nodeType": "YulAssignment",
															"src": "1707:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1723:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1723:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1717:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1717:5:6"
																},
																"nativeSrc": "1717:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1717:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1707:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1637:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1679:5:6",
														"nodeType": "YulTypedName",
														"src": "1679:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1689:6:6",
														"nodeType": "YulTypedName",
														"src": "1689:6:6",
														"type": ""
													}
												],
												"src": "1637:99:6"
											},
											{
												"body": {
													"nativeSrc": "1770:152:6",
													"nodeType": "YulBlock",
													"src": "1770:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1787:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1787:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1790:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1790:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1780:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1780:6:6"
																},
																"nativeSrc": "1780:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1780:88:6"
															},
															"nativeSrc": "1780:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1780:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1884:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1884:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1887:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1887:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1877:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:6"
																},
																"nativeSrc": "1877:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1877:15:6"
															},
															"nativeSrc": "1877:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1877:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1908:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1908:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1911:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1911:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1901:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1901:6:6"
																},
																"nativeSrc": "1901:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1901:15:6"
															},
															"nativeSrc": "1901:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1901:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1742:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1742:180:6"
											},
											{
												"body": {
													"nativeSrc": "1956:152:6",
													"nodeType": "YulBlock",
													"src": "1956:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1973:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1973:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1976:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1976:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1966:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nativeSrc": "1966:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1966:88:6"
															},
															"nativeSrc": "1966:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1966:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2070:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2070:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2073:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2073:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2063:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2063:6:6"
																},
																"nativeSrc": "2063:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2063:15:6"
															},
															"nativeSrc": "2063:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2063:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2094:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2094:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2097:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:6"
																},
																"nativeSrc": "2087:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2087:15:6"
															},
															"nativeSrc": "2087:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2087:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1928:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1928:180:6"
											},
											{
												"body": {
													"nativeSrc": "2165:269:6",
													"nodeType": "YulBlock",
													"src": "2165:269:6",
													"statements": [
														{
															"nativeSrc": "2175:22:6",
															"nodeType": "YulAssignment",
															"src": "2175:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2189:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2189:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2195:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2195:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2185:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2185:3:6"
																},
																"nativeSrc": "2185:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2185:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2175:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2175:6:6"
																}
															]
														},
														{
															"nativeSrc": "2206:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2206:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2236:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2236:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2242:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2242:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2232:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2232:3:6"
																},
																"nativeSrc": "2232:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2232:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2210:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2210:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2283:51:6",
																"nodeType": "YulBlock",
																"src": "2283:51:6",
																"statements": [
																	{
																		"nativeSrc": "2297:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2297:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2311:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2311:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2319:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2319:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2307:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2307:3:6"
																			},
																			"nativeSrc": "2307:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2307:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2297:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2297:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2263:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2263:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2256:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:6"
																},
																"nativeSrc": "2256:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2256:26:6"
															},
															"nativeSrc": "2253:81:6",
															"nodeType": "YulIf",
															"src": "2253:81:6"
														},
														{
															"body": {
																"nativeSrc": "2386:42:6",
																"nodeType": "YulBlock",
																"src": "2386:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2400:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2400:16:6"
																			},
																			"nativeSrc": "2400:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2400:18:6"
																		},
																		"nativeSrc": "2400:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2400:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2350:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2350:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2373:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2381:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2381:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2370:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2370:2:6"
																		},
																		"nativeSrc": "2370:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2370:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2347:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2347:2:6"
																},
																"nativeSrc": "2347:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2347:38:6"
															},
															"nativeSrc": "2344:84:6",
															"nodeType": "YulIf",
															"src": "2344:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2114:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2149:4:6",
														"nodeType": "YulTypedName",
														"src": "2149:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2158:6:6",
														"nodeType": "YulTypedName",
														"src": "2158:6:6",
														"type": ""
													}
												],
												"src": "2114:320:6"
											},
											{
												"body": {
													"nativeSrc": "2494:87:6",
													"nodeType": "YulBlock",
													"src": "2494:87:6",
													"statements": [
														{
															"nativeSrc": "2504:11:6",
															"nodeType": "YulAssignment",
															"src": "2504:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "2512:3:6",
																"nodeType": "YulIdentifier",
																"src": "2512:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2504:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2504:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2532:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2532:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2535:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2535:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2525:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2525:6:6"
																},
																"nativeSrc": "2525:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2525:14:6"
															},
															"nativeSrc": "2525:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2525:14:6"
														},
														{
															"nativeSrc": "2548:26:6",
															"nodeType": "YulAssignment",
															"src": "2548:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2566:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2569:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2569:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2556:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2556:9:6"
																},
																"nativeSrc": "2556:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2556:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2548:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2548:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2440:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2481:3:6",
														"nodeType": "YulTypedName",
														"src": "2481:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2489:4:6",
														"nodeType": "YulTypedName",
														"src": "2489:4:6",
														"type": ""
													}
												],
												"src": "2440:141:6"
											},
											{
												"body": {
													"nativeSrc": "2631:49:6",
													"nodeType": "YulBlock",
													"src": "2631:49:6",
													"statements": [
														{
															"nativeSrc": "2641:33:6",
															"nodeType": "YulAssignment",
															"src": "2641:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2659:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2659:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2666:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2666:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2655:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2655:3:6"
																		},
																		"nativeSrc": "2655:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2655:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2671:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2671:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2651:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:6"
																},
																"nativeSrc": "2651:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2651:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2641:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2641:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2587:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2614:5:6",
														"nodeType": "YulTypedName",
														"src": "2614:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2624:6:6",
														"nodeType": "YulTypedName",
														"src": "2624:6:6",
														"type": ""
													}
												],
												"src": "2587:93:6"
											},
											{
												"body": {
													"nativeSrc": "2739:54:6",
													"nodeType": "YulBlock",
													"src": "2739:54:6",
													"statements": [
														{
															"nativeSrc": "2749:37:6",
															"nodeType": "YulAssignment",
															"src": "2749:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2774:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2774:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2780:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2780:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2770:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2770:3:6"
																},
																"nativeSrc": "2770:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2770:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2749:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2749:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2686:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2714:4:6",
														"nodeType": "YulTypedName",
														"src": "2714:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2720:5:6",
														"nodeType": "YulTypedName",
														"src": "2720:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2730:8:6",
														"nodeType": "YulTypedName",
														"src": "2730:8:6",
														"type": ""
													}
												],
												"src": "2686:107:6"
											},
											{
												"body": {
													"nativeSrc": "2875:317:6",
													"nodeType": "YulBlock",
													"src": "2875:317:6",
													"statements": [
														{
															"nativeSrc": "2885:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2885:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2906:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "2906:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2918:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2918:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2902:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2902:3:6"
																},
																"nativeSrc": "2902:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2902:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2889:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2889:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2929:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2929:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2960:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2960:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2971:66:6",
																		"nodeType": "YulLiteral",
																		"src": "2971:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2941:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2941:18:6"
																},
																"nativeSrc": "2941:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2941:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2933:4:6",
																	"nodeType": "YulTypedName",
																	"src": "2933:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3047:51:6",
															"nodeType": "YulAssignment",
															"src": "3047:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3078:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3078:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3089:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3089:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3059:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3059:18:6"
																},
																"nativeSrc": "3059:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3059:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3047:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3047:8:6"
																}
															]
														},
														{
															"nativeSrc": "3107:30:6",
															"nodeType": "YulAssignment",
															"src": "3107:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3120:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3120:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3131:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3131:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3127:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3127:3:6"
																		},
																		"nativeSrc": "3127:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3127:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3116:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3116:3:6"
																},
																"nativeSrc": "3116:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3116:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3107:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3107:5:6"
																}
															]
														},
														{
															"nativeSrc": "3146:40:6",
															"nodeType": "YulAssignment",
															"src": "3146:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3159:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3159:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3170:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3170:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3180:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3180:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3166:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3166:3:6"
																		},
																		"nativeSrc": "3166:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3166:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3156:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3156:2:6"
																},
																"nativeSrc": "3156:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3156:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3146:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3146:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2799:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2836:5:6",
														"nodeType": "YulTypedName",
														"src": "2836:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2843:10:6",
														"nodeType": "YulTypedName",
														"src": "2843:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2855:8:6",
														"nodeType": "YulTypedName",
														"src": "2855:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2868:6:6",
														"nodeType": "YulTypedName",
														"src": "2868:6:6",
														"type": ""
													}
												],
												"src": "2799:393:6"
											},
											{
												"body": {
													"nativeSrc": "3230:28:6",
													"nodeType": "YulBlock",
													"src": "3230:28:6",
													"statements": [
														{
															"nativeSrc": "3240:12:6",
															"nodeType": "YulAssignment",
															"src": "3240:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3247:5:6",
																"nodeType": "YulIdentifier",
																"src": "3247:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3240:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3240:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3198:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3216:5:6",
														"nodeType": "YulTypedName",
														"src": "3216:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3226:3:6",
														"nodeType": "YulTypedName",
														"src": "3226:3:6",
														"type": ""
													}
												],
												"src": "3198:60:6"
											},
											{
												"body": {
													"nativeSrc": "3324:82:6",
													"nodeType": "YulBlock",
													"src": "3324:82:6",
													"statements": [
														{
															"nativeSrc": "3334:66:6",
															"nodeType": "YulAssignment",
															"src": "3334:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3392:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3392:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3374:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3374:17:6"
																				},
																				"nativeSrc": "3374:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3365:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3365:8:6"
																		},
																		"nativeSrc": "3365:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3365:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3347:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3347:17:6"
																},
																"nativeSrc": "3347:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3347:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3334:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3334:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3264:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3304:5:6",
														"nodeType": "YulTypedName",
														"src": "3304:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3314:9:6",
														"nodeType": "YulTypedName",
														"src": "3314:9:6",
														"type": ""
													}
												],
												"src": "3264:142:6"
											},
											{
												"body": {
													"nativeSrc": "3459:28:6",
													"nodeType": "YulBlock",
													"src": "3459:28:6",
													"statements": [
														{
															"nativeSrc": "3469:12:6",
															"nodeType": "YulAssignment",
															"src": "3469:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3476:5:6",
																"nodeType": "YulIdentifier",
																"src": "3476:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3469:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3412:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3445:5:6",
														"nodeType": "YulTypedName",
														"src": "3445:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3455:3:6",
														"nodeType": "YulTypedName",
														"src": "3455:3:6",
														"type": ""
													}
												],
												"src": "3412:75:6"
											},
											{
												"body": {
													"nativeSrc": "3569:193:6",
													"nodeType": "YulBlock",
													"src": "3569:193:6",
													"statements": [
														{
															"nativeSrc": "3579:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3579:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3634:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3634:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3603:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3603:30:6"
																},
																"nativeSrc": "3603:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3603:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3583:16:6",
																	"nodeType": "YulTypedName",
																	"src": "3583:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3658:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3658:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3698:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3698:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3692:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3692:5:6"
																				},
																				"nativeSrc": "3692:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3692:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3705:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3737:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "3737:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3713:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "3713:23:6"
																				},
																				"nativeSrc": "3713:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3713:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3664:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "3664:27:6"
																		},
																		"nativeSrc": "3664:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3664:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3651:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:6"
																},
																"nativeSrc": "3651:105:6",
																"nodeType": "YulFunctionCall",
																"src": "3651:105:6"
															},
															"nativeSrc": "3651:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "3651:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3493:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3546:4:6",
														"nodeType": "YulTypedName",
														"src": "3546:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3552:6:6",
														"nodeType": "YulTypedName",
														"src": "3552:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3560:7:6",
														"nodeType": "YulTypedName",
														"src": "3560:7:6",
														"type": ""
													}
												],
												"src": "3493:269:6"
											},
											{
												"body": {
													"nativeSrc": "3817:24:6",
													"nodeType": "YulBlock",
													"src": "3817:24:6",
													"statements": [
														{
															"nativeSrc": "3827:8:6",
															"nodeType": "YulAssignment",
															"src": "3827:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3834:1:6",
																"nodeType": "YulLiteral",
																"src": "3834:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3827:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3768:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3813:3:6",
														"nodeType": "YulTypedName",
														"src": "3813:3:6",
														"type": ""
													}
												],
												"src": "3768:73:6"
											},
											{
												"body": {
													"nativeSrc": "3900:136:6",
													"nodeType": "YulBlock",
													"src": "3900:136:6",
													"statements": [
														{
															"nativeSrc": "3910:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3910:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3924:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3924:30:6"
																},
																"nativeSrc": "3924:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3924:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3914:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3914:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4009:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4009:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4015:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4023:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4023:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3965:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3965:43:6"
																},
																"nativeSrc": "3965:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3965:65:6"
															},
															"nativeSrc": "3965:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3965:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3847:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3886:4:6",
														"nodeType": "YulTypedName",
														"src": "3886:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3892:6:6",
														"nodeType": "YulTypedName",
														"src": "3892:6:6",
														"type": ""
													}
												],
												"src": "3847:189:6"
											},
											{
												"body": {
													"nativeSrc": "4092:136:6",
													"nodeType": "YulBlock",
													"src": "4092:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4159:63:6",
																"nodeType": "YulBlock",
																"src": "4159:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4203:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4203:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4210:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4210:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4173:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "4173:29:6"
																			},
																			"nativeSrc": "4173:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:39:6"
																		},
																		"nativeSrc": "4173:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4173:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4112:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4112:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4119:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4119:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4109:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4109:2:6"
																},
																"nativeSrc": "4109:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4109:14:6"
															},
															"nativeSrc": "4102:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4124:26:6",
																"nodeType": "YulBlock",
																"src": "4124:26:6",
																"statements": [
																	{
																		"nativeSrc": "4126:22:6",
																		"nodeType": "YulAssignment",
																		"src": "4126:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4139:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4139:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4146:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4135:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4135:3:6"
																			},
																			"nativeSrc": "4135:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4135:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4126:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4126:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4106:2:6",
																"nodeType": "YulBlock",
																"src": "4106:2:6",
																"statements": []
															},
															"src": "4102:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4042:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4080:5:6",
														"nodeType": "YulTypedName",
														"src": "4080:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4087:3:6",
														"nodeType": "YulTypedName",
														"src": "4087:3:6",
														"type": ""
													}
												],
												"src": "4042:186:6"
											},
											{
												"body": {
													"nativeSrc": "4313:464:6",
													"nodeType": "YulBlock",
													"src": "4313:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4339:431:6",
																"nodeType": "YulBlock",
																"src": "4339:431:6",
																"statements": [
																	{
																		"nativeSrc": "4353:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4353:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4401:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4401:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4369:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "4369:31:6"
																			},
																			"nativeSrc": "4369:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4369:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4357:8:6",
																				"nodeType": "YulTypedName",
																				"src": "4357:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4420:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4420:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4443:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4443:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4471:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "4471:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4453:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "4453:17:6"
																					},
																					"nativeSrc": "4453:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4453:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4439:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4439:3:6"
																			},
																			"nativeSrc": "4439:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4439:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4424:11:6",
																				"nodeType": "YulTypedName",
																				"src": "4424:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4640:27:6",
																			"nodeType": "YulBlock",
																			"src": "4640:27:6",
																			"statements": [
																				{
																					"nativeSrc": "4642:23:6",
																					"nodeType": "YulAssignment",
																					"src": "4642:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4657:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4657:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4642:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "4642:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4624:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "4624:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4636:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4636:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4621:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4621:2:6"
																			},
																			"nativeSrc": "4621:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4621:18:6"
																		},
																		"nativeSrc": "4618:49:6",
																		"nodeType": "YulIf",
																		"src": "4618:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4709:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "4709:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4726:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "4726:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4754:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4754:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4736:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "4736:17:6"
																							},
																							"nativeSrc": "4736:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4736:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4722:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4722:3:6"
																					},
																					"nativeSrc": "4722:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4722:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4680:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "4680:28:6"
																			},
																			"nativeSrc": "4680:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4680:80:6"
																		},
																		"nativeSrc": "4680:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4680:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4330:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4330:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4335:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4327:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4327:2:6"
																},
																"nativeSrc": "4327:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4327:11:6"
															},
															"nativeSrc": "4324:446:6",
															"nodeType": "YulIf",
															"src": "4324:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4234:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4289:5:6",
														"nodeType": "YulTypedName",
														"src": "4289:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4296:3:6",
														"nodeType": "YulTypedName",
														"src": "4296:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4301:10:6",
														"nodeType": "YulTypedName",
														"src": "4301:10:6",
														"type": ""
													}
												],
												"src": "4234:543:6"
											},
											{
												"body": {
													"nativeSrc": "4846:54:6",
													"nodeType": "YulBlock",
													"src": "4846:54:6",
													"statements": [
														{
															"nativeSrc": "4856:37:6",
															"nodeType": "YulAssignment",
															"src": "4856:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4881:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4881:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4887:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4887:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4877:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:6"
																},
																"nativeSrc": "4877:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4877:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4856:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4856:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4783:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4821:4:6",
														"nodeType": "YulTypedName",
														"src": "4821:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4827:5:6",
														"nodeType": "YulTypedName",
														"src": "4827:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4837:8:6",
														"nodeType": "YulTypedName",
														"src": "4837:8:6",
														"type": ""
													}
												],
												"src": "4783:117:6"
											},
											{
												"body": {
													"nativeSrc": "4957:118:6",
													"nodeType": "YulBlock",
													"src": "4957:118:6",
													"statements": [
														{
															"nativeSrc": "4967:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4967:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5016:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5016:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5019:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5019:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5012:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5012:3:6"
																				},
																				"nativeSrc": "5012:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5012:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5031:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5031:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5027:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:6"
																				},
																				"nativeSrc": "5027:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5027:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4983:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "4983:28:6"
																		},
																		"nativeSrc": "4983:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4983:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:6"
																},
																"nativeSrc": "4979:56:6",
																"nodeType": "YulFunctionCall",
																"src": "4979:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4971:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4971:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5044:25:6",
															"nodeType": "YulAssignment",
															"src": "5044:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5058:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5058:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5064:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5064:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5054:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:6"
																},
																"nativeSrc": "5054:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5054:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5044:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4906:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4934:4:6",
														"nodeType": "YulTypedName",
														"src": "4934:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4940:5:6",
														"nodeType": "YulTypedName",
														"src": "4940:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4950:6:6",
														"nodeType": "YulTypedName",
														"src": "4950:6:6",
														"type": ""
													}
												],
												"src": "4906:169:6"
											},
											{
												"body": {
													"nativeSrc": "5161:214:6",
													"nodeType": "YulBlock",
													"src": "5161:214:6",
													"statements": [
														{
															"nativeSrc": "5294:37:6",
															"nodeType": "YulAssignment",
															"src": "5294:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5321:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5321:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5327:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5327:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5302:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5302:18:6"
																},
																"nativeSrc": "5302:29:6",
																"nodeType": "YulFunctionCall",
																"src": "5302:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5294:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:6"
																}
															]
														},
														{
															"nativeSrc": "5340:29:6",
															"nodeType": "YulAssignment",
															"src": "5340:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5351:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5351:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5361:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5361:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5364:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5364:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5357:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:6"
																		},
																		"nativeSrc": "5357:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5348:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5348:2:6"
																},
																"nativeSrc": "5348:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5348:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5340:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5080:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5142:4:6",
														"nodeType": "YulTypedName",
														"src": "5142:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5148:3:6",
														"nodeType": "YulTypedName",
														"src": "5148:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5156:4:6",
														"nodeType": "YulTypedName",
														"src": "5156:4:6",
														"type": ""
													}
												],
												"src": "5080:295:6"
											},
											{
												"body": {
													"nativeSrc": "5472:1303:6",
													"nodeType": "YulBlock",
													"src": "5472:1303:6",
													"statements": [
														{
															"nativeSrc": "5483:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5483:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5530:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5530:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5497:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "5497:32:6"
																},
																"nativeSrc": "5497:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5497:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5487:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5487:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5619:22:6",
																"nodeType": "YulBlock",
																"src": "5619:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5621:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5621:16:6"
																			},
																			"nativeSrc": "5621:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5621:18:6"
																		},
																		"nativeSrc": "5621:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5621:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5591:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5599:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5599:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5588:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5588:2:6"
																},
																"nativeSrc": "5588:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5588:30:6"
															},
															"nativeSrc": "5585:56:6",
															"nodeType": "YulIf",
															"src": "5585:56:6"
														},
														{
															"nativeSrc": "5651:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5651:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5697:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5697:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5691:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:6"
																		},
																		"nativeSrc": "5691:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5691:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5665:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "5665:25:6"
																},
																"nativeSrc": "5665:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5665:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5655:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5655:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5796:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5796:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5802:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5802:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5810:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5810:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5750:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "5750:45:6"
																},
																"nativeSrc": "5750:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5750:67:6"
															},
															"nativeSrc": "5750:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5750:67:6"
														},
														{
															"nativeSrc": "5827:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5827:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5844:1:6",
																"nodeType": "YulLiteral",
																"src": "5844:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5831:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5831:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5855:17:6",
															"nodeType": "YulAssignment",
															"src": "5855:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5868:4:6",
																"nodeType": "YulLiteral",
																"src": "5868:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5855:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5855:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5919:611:6",
																		"nodeType": "YulBlock",
																		"src": "5919:611:6",
																		"statements": [
																			{
																				"nativeSrc": "5933:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5933:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5952:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5952:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5964:4:6",
																									"nodeType": "YulLiteral",
																									"src": "5964:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5960:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5960:3:6"
																							},
																							"nativeSrc": "5960:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5960:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5948:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5948:3:6"
																					},
																					"nativeSrc": "5948:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5948:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5937:7:6",
																						"nodeType": "YulTypedName",
																						"src": "5937:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5984:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5984:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6030:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6030:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5998:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "5998:31:6"
																					},
																					"nativeSrc": "5998:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5998:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5988:6:6",
																						"nodeType": "YulTypedName",
																						"src": "5988:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6048:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6048:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6057:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6057:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6052:1:6",
																						"nodeType": "YulTypedName",
																						"src": "6052:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6116:163:6",
																					"nodeType": "YulBlock",
																					"src": "6116:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6141:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6141:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6159:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "6159:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6164:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "6164:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6155:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6155:3:6"
																												},
																												"nativeSrc": "6155:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6155:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6149:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "6149:5:6"
																										},
																										"nativeSrc": "6149:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6149:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6134:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6134:6:6"
																								},
																								"nativeSrc": "6134:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6134:42:6"
																							},
																							"nativeSrc": "6134:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6134:42:6"
																						},
																						{
																							"nativeSrc": "6193:24:6",
																							"nodeType": "YulAssignment",
																							"src": "6193:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6207:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6207:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6215:1:6",
																										"nodeType": "YulLiteral",
																										"src": "6215:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6203:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6203:3:6"
																								},
																								"nativeSrc": "6203:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6203:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6193:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6193:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6234:31:6",
																							"nodeType": "YulAssignment",
																							"src": "6234:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6251:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "6251:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6262:2:6",
																										"nodeType": "YulLiteral",
																										"src": "6262:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6247:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6247:3:6"
																								},
																								"nativeSrc": "6247:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6247:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6234:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "6234:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6082:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "6082:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6085:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6085:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6079:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6079:2:6"
																					},
																					"nativeSrc": "6079:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:14:6"
																				},
																				"nativeSrc": "6071:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6094:21:6",
																					"nodeType": "YulBlock",
																					"src": "6094:21:6",
																					"statements": [
																						{
																							"nativeSrc": "6096:17:6",
																							"nodeType": "YulAssignment",
																							"src": "6096:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6105:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "6105:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6108:4:6",
																										"nodeType": "YulLiteral",
																										"src": "6108:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6101:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6101:3:6"
																								},
																								"nativeSrc": "6101:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6101:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6096:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "6096:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6075:3:6",
																					"nodeType": "YulBlock",
																					"src": "6075:3:6",
																					"statements": []
																				},
																				"src": "6071:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "6315:156:6",
																					"nodeType": "YulBlock",
																					"src": "6315:156:6",
																					"statements": [
																						{
																							"nativeSrc": "6333:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6333:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6360:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6360:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6365:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6365:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6356:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6356:3:6"
																										},
																										"nativeSrc": "6356:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6356:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6350:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6350:5:6"
																								},
																								"nativeSrc": "6350:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6350:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6337:9:6",
																									"nodeType": "YulTypedName",
																									"src": "6337:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6400:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6400:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6427:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6427:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6442:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "6442:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6450:4:6",
																														"nodeType": "YulLiteral",
																														"src": "6450:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6438:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6438:3:6"
																												},
																												"nativeSrc": "6438:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6438:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6408:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "6408:18:6"
																										},
																										"nativeSrc": "6408:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6408:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6393:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6393:6:6"
																								},
																								"nativeSrc": "6393:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6393:64:6"
																							},
																							"nativeSrc": "6393:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6393:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6298:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6298:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6307:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6307:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6295:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6295:2:6"
																					},
																					"nativeSrc": "6295:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6295:19:6"
																				},
																				"nativeSrc": "6292:179:6",
																				"nodeType": "YulIf",
																				"src": "6292:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6491:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6491:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6505:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "6505:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6513:1:6",
																											"nodeType": "YulLiteral",
																											"src": "6513:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6501:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "6501:3:6"
																									},
																									"nativeSrc": "6501:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "6501:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6517:1:6",
																									"nodeType": "YulLiteral",
																									"src": "6517:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6497:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6497:3:6"
																							},
																							"nativeSrc": "6497:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6497:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6484:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6484:6:6"
																					},
																					"nativeSrc": "6484:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6484:36:6"
																				},
																				"nativeSrc": "6484:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6484:36:6"
																			}
																		]
																	},
																	"nativeSrc": "5912:618:6",
																	"nodeType": "YulCase",
																	"src": "5912:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5917:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5917:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6547:222:6",
																		"nodeType": "YulBlock",
																		"src": "6547:222:6",
																		"statements": [
																			{
																				"nativeSrc": "6561:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6561:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6574:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6574:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6565:5:6",
																						"nodeType": "YulTypedName",
																						"src": "6565:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6598:67:6",
																					"nodeType": "YulBlock",
																					"src": "6598:67:6",
																					"statements": [
																						{
																							"nativeSrc": "6616:35:6",
																							"nodeType": "YulAssignment",
																							"src": "6616:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6635:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6635:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6640:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6640:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6631:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6631:3:6"
																										},
																										"nativeSrc": "6631:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6631:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6625:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6625:5:6"
																								},
																								"nativeSrc": "6625:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6625:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6616:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6616:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6591:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6591:6:6"
																				},
																				"nativeSrc": "6588:77:6",
																				"nodeType": "YulIf",
																				"src": "6588:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6685:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6685:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6744:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6744:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6751:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6751:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6691:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "6691:52:6"
																							},
																							"nativeSrc": "6691:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6691:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6678:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6678:6:6"
																					},
																					"nativeSrc": "6678:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6678:81:6"
																				},
																				"nativeSrc": "6678:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6678:81:6"
																			}
																		]
																	},
																	"nativeSrc": "6539:230:6",
																	"nodeType": "YulCase",
																	"src": "6539:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5892:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5900:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5900:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5889:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5889:2:6"
																},
																"nativeSrc": "5889:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5889:14:6"
															},
															"nativeSrc": "5882:887:6",
															"nodeType": "YulSwitch",
															"src": "5882:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5380:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5461:4:6",
														"nodeType": "YulTypedName",
														"src": "5461:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5467:3:6",
														"nodeType": "YulTypedName",
														"src": "5467:3:6",
														"type": ""
													}
												],
												"src": "5380:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620016d5380380620016d5833981810160405281019062000036919062000290565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a1919062000303565b60405180910390fd5b620000bb816200019360201b60201c565b506040518060400160405280601081526020017f4170757320546f6b656e20416c706861000000000000000000000000000000008152506004908162000102919062000579565b506040518060400160405280600481526020017f41505461000000000000000000000000000000000000000000000000000000008152506005908162000149919062000579565b508060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550506200065d565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f819050919050565b6200026c8162000258565b811462000277575f80fd5b50565b5f815190506200028a8162000261565b92915050565b5f60208284031215620002a857620002a762000254565b5b5f620002b7848285016200027a565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002eb82620002c0565b9050919050565b620002fd81620002df565b82525050565b5f602082019050620003185f830184620002f2565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200039a57607f821691505b602082108103620003b057620003af62000355565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620004147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003d7565b620004208683620003d7565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620004616200045b620004558462000258565b62000438565b62000258565b9050919050565b5f819050919050565b6200047c8362000441565b620004946200048b8262000468565b848454620003e3565b825550505050565b5f90565b620004aa6200049c565b620004b781848462000471565b505050565b5b81811015620004de57620004d25f82620004a0565b600181019050620004bd565b5050565b601f8211156200052d57620004f781620003b6565b6200050284620003c8565b8101602085101562000512578190505b6200052a6200052185620003c8565b830182620004bc565b50505b505050565b5f82821c905092915050565b5f6200054f5f198460080262000532565b1980831691505092915050565b5f6200056983836200053e565b9150826002028217905092915050565b62000584826200031e565b67ffffffffffffffff811115620005a0576200059f62000328565b5b620005ac825462000382565b620005b9828285620004e2565b5f60209050601f831160018114620005ef575f8415620005da578287015190505b620005e685826200055c565b86555062000655565b601f198416620005ff86620003b6565b5f5b82811015620006285784890151825560018201915060208501945060208101905062000601565b8683101562000648578489015162000644601f8916826200053e565b8355505b6001600288020188555050505b505050505050565b61106a806200066b5f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063715018a61161006f578063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c8578063a9059cbb146101e6578063dd62ed3e14610216578063f2fde38b14610246576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd14610122578063313ce5671461015257806370a0823114610170575b5f80fd5b6100be610262565b6040516100cb9190610ce3565b60405180910390f35b6100ee60048036038101906100e99190610d94565b6102f2565b6040516100fb9190610dec565b60405180910390f35b61010c610314565b6040516101199190610e14565b60405180910390f35b61013c60048036038101906101379190610e2d565b61031d565b6040516101499190610dec565b60405180910390f35b61015a61034b565b6040516101679190610e98565b60405180910390f35b61018a60048036038101906101859190610eb1565b610353565b6040516101979190610e14565b60405180910390f35b6101a8610399565b005b6101b26103ac565b6040516101bf9190610eeb565b60405180910390f35b6101d06103d3565b6040516101dd9190610ce3565b60405180910390f35b61020060048036038101906101fb9190610d94565b610463565b60405161020d9190610dec565b60405180910390f35b610230600480360381019061022b9190610f04565b610485565b60405161023d9190610e14565b60405180910390f35b610260600480360381019061025b9190610eb1565b610507565b005b60606004805461027190610f6f565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90610f6f565b80156102e85780601f106102bf576101008083540402835291602001916102e8565b820191905f5260205f20905b8154815290600101906020018083116102cb57829003601f168201915b5050505050905090565b5f806102fc61058b565b9050610309818585610592565b600191505092915050565b5f600354905090565b5f8061032761058b565b90506103348582856105a4565b61033f858585610636565b60019150509392505050565b5f6012905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6103a1610726565b6103aa5f6107ad565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546103e290610f6f565b80601f016020809104026020016040519081016040528092919081815260200182805461040e90610f6f565b80156104595780601f1061043057610100808354040283529160200191610459565b820191905f5260205f20905b81548152906001019060200180831161043c57829003601f168201915b5050505050905090565b5f8061046d61058b565b905061047a818585610636565b600191505092915050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61050f610726565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361057f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105769190610eeb565b60405180910390fd5b610588816107ad565b50565b5f33905090565b61059f838383600161086e565b505050565b5f6105af8484610485565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106305781811015610621578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161061893929190610f9f565b60405180910390fd5b61062f84848484035f61086e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106a6575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161069d9190610eeb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610716575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161070d9190610eeb565b60405180910390fd5b610721838383610a3d565b505050565b61072e61058b565b73ffffffffffffffffffffffffffffffffffffffff1661074c6103ac565b73ffffffffffffffffffffffffffffffffffffffff16146107ab5761076f61058b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107a29190610eeb565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108de575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108d59190610eeb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361094e575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016109459190610eeb565b60405180910390fd5b8160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610a37578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a2e9190610e14565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a8d578060035f828254610a819190611001565b92505081905550610b5d565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610b17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610b0e93929190610f9f565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba4578060035f8282540392505081905550610bef565b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c4c9190610e14565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610c90578082015181840152602081019050610c75565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610cb582610c59565b610cbf8185610c63565b9350610ccf818560208601610c73565b610cd881610c9b565b840191505092915050565b5f6020820190508181035f830152610cfb8184610cab565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d3082610d07565b9050919050565b610d4081610d26565b8114610d4a575f80fd5b50565b5f81359050610d5b81610d37565b92915050565b5f819050919050565b610d7381610d61565b8114610d7d575f80fd5b50565b5f81359050610d8e81610d6a565b92915050565b5f8060408385031215610daa57610da9610d03565b5b5f610db785828601610d4d565b9250506020610dc885828601610d80565b9150509250929050565b5f8115159050919050565b610de681610dd2565b82525050565b5f602082019050610dff5f830184610ddd565b92915050565b610e0e81610d61565b82525050565b5f602082019050610e275f830184610e05565b92915050565b5f805f60608486031215610e4457610e43610d03565b5b5f610e5186828701610d4d565b9350506020610e6286828701610d4d565b9250506040610e7386828701610d80565b9150509250925092565b5f60ff82169050919050565b610e9281610e7d565b82525050565b5f602082019050610eab5f830184610e89565b92915050565b5f60208284031215610ec657610ec5610d03565b5b5f610ed384828501610d4d565b91505092915050565b610ee581610d26565b82525050565b5f602082019050610efe5f830184610edc565b92915050565b5f8060408385031215610f1a57610f19610d03565b5b5f610f2785828601610d4d565b9250506020610f3885828601610d4d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610f8657607f821691505b602082108103610f9957610f98610f42565b5b50919050565b5f606082019050610fb25f830186610edc565b610fbf6020830185610e05565b610fcc6040830184610e05565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61100b82610d61565b915061101683610d61565b925082820190508082111561102e5761102d610fd4565b5b9291505056fea264697066735822122026becd99efa2f95bca67cfd88b013cad2fc0aa27553f859228de798bf56ab80a64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x16D5 CODESIZE SUB DUP1 PUSH3 0x16D5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x290 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x193 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4170757320546F6B656E20416C70686100000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 SWAP1 DUP2 PUSH3 0x102 SWAP2 SWAP1 PUSH3 0x579 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4150546100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP2 PUSH3 0x149 SWAP2 SWAP1 PUSH3 0x579 JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH3 0x65D JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26C DUP2 PUSH3 0x258 JUMP JUMPDEST DUP2 EQ PUSH3 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x28A DUP2 PUSH3 0x261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A8 JUMPI PUSH3 0x2A7 PUSH3 0x254 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2B7 DUP5 DUP3 DUP6 ADD PUSH3 0x27A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2EB DUP3 PUSH3 0x2C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FD DUP2 PUSH3 0x2DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x318 PUSH0 DUP4 ADD DUP5 PUSH3 0x2F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x39A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3B0 JUMPI PUSH3 0x3AF PUSH3 0x355 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x414 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3D7 JUMP JUMPDEST PUSH3 0x420 DUP7 DUP4 PUSH3 0x3D7 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x461 PUSH3 0x45B PUSH3 0x455 DUP5 PUSH3 0x258 JUMP JUMPDEST PUSH3 0x438 JUMP JUMPDEST PUSH3 0x258 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x47C DUP4 PUSH3 0x441 JUMP JUMPDEST PUSH3 0x494 PUSH3 0x48B DUP3 PUSH3 0x468 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3E3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x4AA PUSH3 0x49C JUMP JUMPDEST PUSH3 0x4B7 DUP2 DUP5 DUP5 PUSH3 0x471 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4DE JUMPI PUSH3 0x4D2 PUSH0 DUP3 PUSH3 0x4A0 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x52D JUMPI PUSH3 0x4F7 DUP2 PUSH3 0x3B6 JUMP JUMPDEST PUSH3 0x502 DUP5 PUSH3 0x3C8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x512 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x52A PUSH3 0x521 DUP6 PUSH3 0x3C8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4BC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x54F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x532 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x569 DUP4 DUP4 PUSH3 0x53E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x584 DUP3 PUSH3 0x31E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5A0 JUMPI PUSH3 0x59F PUSH3 0x328 JUMP JUMPDEST JUMPDEST PUSH3 0x5AC DUP3 SLOAD PUSH3 0x382 JUMP JUMPDEST PUSH3 0x5B9 DUP3 DUP3 DUP6 PUSH3 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5EF JUMPI PUSH0 DUP5 ISZERO PUSH3 0x5DA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5E6 DUP6 DUP3 PUSH3 0x55C JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x655 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5FF DUP7 PUSH3 0x3B6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x628 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x601 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x648 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x644 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x53E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x106A DUP1 PUSH3 0x66B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x246 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x399 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x271 SWAP1 PUSH2 0xF6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29D SWAP1 PUSH2 0xF6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2FC PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x309 DUP2 DUP6 DUP6 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x327 PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x334 DUP6 DUP3 DUP6 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x33F DUP6 DUP6 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x3AA PUSH0 PUSH2 0x7AD JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0xF6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40E SWAP1 PUSH2 0xF6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x459 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x430 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x459 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x46D PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x47A DUP2 DUP6 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x50F PUSH2 0x726 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x57F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x7AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x86E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5AF DUP5 DUP5 PUSH2 0x485 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x630 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x621 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x86E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x721 DUP4 DUP4 DUP4 PUSH2 0xA3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x72E PUSH2 0x58B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x74C PUSH2 0x3AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AB JUMPI PUSH2 0x76F PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x94E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x945 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA37 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8D JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB5D JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA4 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBEF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC4C SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC90 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC75 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB5 DUP3 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xCBF DUP2 DUP6 PUSH2 0xC63 JUMP JUMPDEST SWAP4 POP PUSH2 0xCCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC73 JUMP JUMPDEST PUSH2 0xCD8 DUP2 PUSH2 0xC9B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCFB DUP2 DUP5 PUSH2 0xCAB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD30 DUP3 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD40 DUP2 PUSH2 0xD26 JUMP JUMPDEST DUP2 EQ PUSH2 0xD4A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5B DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD73 DUP2 PUSH2 0xD61 JUMP JUMPDEST DUP2 EQ PUSH2 0xD7D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD8E DUP2 PUSH2 0xD6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAA JUMPI PUSH2 0xDA9 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB7 DUP6 DUP3 DUP7 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xD80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xDD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFF PUSH0 DUP4 ADD DUP5 PUSH2 0xDDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0E DUP2 PUSH2 0xD61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE27 PUSH0 DUP4 ADD DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE51 DUP7 DUP3 DUP8 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE62 DUP7 DUP3 DUP8 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE73 DUP7 DUP3 DUP8 ADD PUSH2 0xD80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE92 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAB PUSH0 DUP4 ADD DUP5 PUSH2 0xE89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC6 JUMPI PUSH2 0xEC5 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED3 DUP5 DUP3 DUP6 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE5 DUP2 PUSH2 0xD26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFE PUSH0 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF27 DUP6 DUP3 DUP7 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF38 DUP6 DUP3 DUP7 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF86 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF99 JUMPI PUSH2 0xF98 PUSH2 0xF42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFB2 PUSH0 DUP4 ADD DUP7 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0xFBF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0xFCC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x100B DUP3 PUSH2 0xD61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1016 DUP4 PUSH2 0xD61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x102E JUMPI PUSH2 0x102D PUSH2 0xFD4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xBE 0xCD SWAP10 0xEF LOG2 0xF9 JUMPDEST 0xCA PUSH8 0xCFD88B013CAD2FC0 0xAA 0x27 SSTORE EXTCODEHASH DUP6 SWAP3 0x28 0xDE PUSH26 0x8BF56AB80A64736F6C6343000815003300000000000000000000 ",
							"sourceMap": "1500:9799:5:-:0;;;1999:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2040:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;2062:26:5::1;;;;;;;;;;;;;;;;::::0;:5:::1;:26;;;;;;:::i;:::-;;2098:16;;;;;;;;;;;;;;;;::::0;:7:::1;:16;;;;;;:::i;:::-;;2148:11;2124:9;:21;2134:10;2124:21;;;;;;;;;;;;;;;:35;;;;1999:167:::0;1500:9799;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:126::-;1088:7;1128:42;1121:5;1117:54;1106:65;;1051:126;;;:::o;1183:96::-;1220:7;1249:24;1267:5;1249:24;:::i;:::-;1238:35;;1183:96;;;:::o;1285:118::-;1372:24;1390:5;1372:24;:::i;:::-;1367:3;1360:37;1285:118;;:::o;1409:222::-;1502:4;1540:2;1529:9;1525:18;1517:26;;1553:71;1621:1;1610:9;1606:17;1597:6;1553:71;:::i;:::-;1409:222;;;;:::o;1637:99::-;1689:6;1723:5;1717:12;1707:22;;1637:99;;;:::o;1742:180::-;1790:77;1787:1;1780:88;1887:4;1884:1;1877:15;1911:4;1908:1;1901:15;1928:180;1976:77;1973:1;1966:88;2073:4;2070:1;2063:15;2097:4;2094:1;2087:15;2114:320;2158:6;2195:1;2189:4;2185:12;2175:22;;2242:1;2236:4;2232:12;2263:18;2253:81;;2319:4;2311:6;2307:17;2297:27;;2253:81;2381:2;2373:6;2370:14;2350:18;2347:38;2344:84;;2400:18;;:::i;:::-;2344:84;2165:269;2114:320;;;:::o;2440:141::-;2489:4;2512:3;2504:11;;2535:3;2532:1;2525:14;2569:4;2566:1;2556:18;2548:26;;2440:141;;;:::o;2587:93::-;2624:6;2671:2;2666;2659:5;2655:14;2651:23;2641:33;;2587:93;;;:::o;2686:107::-;2730:8;2780:5;2774:4;2770:16;2749:37;;2686:107;;;;:::o;2799:393::-;2868:6;2918:1;2906:10;2902:18;2941:97;2971:66;2960:9;2941:97;:::i;:::-;3059:39;3089:8;3078:9;3059:39;:::i;:::-;3047:51;;3131:4;3127:9;3120:5;3116:21;3107:30;;3180:4;3170:8;3166:19;3159:5;3156:30;3146:40;;2875:317;;2799:393;;;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;1500:9799:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_829": {
									"entryPoint": 1426,
									"id": 829,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_889": {
									"entryPoint": 2158,
									"id": 889,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1830,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_400": {
									"entryPoint": 1419,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_937": {
									"entryPoint": 1444,
									"id": 937,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1965,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_668": {
									"entryPoint": 1590,
									"id": 668,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_745": {
									"entryPoint": 2621,
									"id": 745,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_565": {
									"entryPoint": 1157,
									"id": 565,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_589": {
									"entryPoint": 754,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_524": {
									"entryPoint": 851,
									"id": 524,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_502": {
									"entryPoint": 843,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_484": {
									"entryPoint": 610,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 940,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 921,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_493": {
									"entryPoint": 979,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_511": {
									"entryPoint": 788,
									"id": 511,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_621": {
									"entryPoint": 797,
									"id": 621,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1287,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_548": {
									"entryPoint": 1123,
									"id": 548,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3999,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3187,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7360:6",
										"nodeType": "YulBlock",
										"src": "0:7360:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:184:6",
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nativeSrc": "359:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:6",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:6",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:6",
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nativeSrc": "449:11:6",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nativeSrc": "468:11:6",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nativeSrc": "462:18:6",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nativeSrc": "442:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nativeSrc": "442:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nativeSrc": "386:13:6",
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nativeSrc": "378:113:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:6",
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nativeSrc": "402:15:6",
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:6",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nativeSrc": "407:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:6",
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nativeSrc": "507:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:6",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nativeSrc": "500:27:6",
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nativeSrc": "500:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nativeSrc": "587:54:6",
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nativeSrc": "597:38:6",
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:6",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nativeSrc": "611:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:6",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nativeSrc": "627:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nativeSrc": "607:28:6",
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:6",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:6",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nativeSrc": "739:285:6",
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nativeSrc": "749:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nativeSrc": "763:39:6",
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:6",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:6",
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nativeSrc": "818:71:6",
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:6",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nativeSrc": "933:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nativeSrc": "898:65:6",
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nativeSrc": "898:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nativeSrc": "972:46:6",
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nativeSrc": "988:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nativeSrc": "979:39:6",
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:6",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:6",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:6",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nativeSrc": "1148:195:6",
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nativeSrc": "1158:26:6",
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nativeSrc": "1166:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nativeSrc": "1201:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nativeSrc": "1220:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nativeSrc": "1194:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nativeSrc": "1194:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nativeSrc": "1250:86:6",
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nativeSrc": "1258:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:6",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:6",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:6",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nativeSrc": "1389:35:6",
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nativeSrc": "1399:19:6",
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nativeSrc": "1409:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:6",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nativeSrc": "1519:28:6",
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nativeSrc": "1529:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nativeSrc": "1529:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nativeSrc": "1642:28:6",
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nativeSrc": "1652:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nativeSrc": "1652:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nativeSrc": "1721:81:6",
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nativeSrc": "1731:65:6",
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nativeSrc": "1742:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:6",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:6",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nativeSrc": "1853:51:6",
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nativeSrc": "1863:35:6",
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nativeSrc": "1874:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:6",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:6",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nativeSrc": "1953:79:6",
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:6",
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nativeSrc": "2012:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nativeSrc": "2012:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nativeSrc": "1983:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nativeSrc": "1973:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nativeSrc": "1966:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nativeSrc": "1963:63:6",
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:6",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nativeSrc": "2090:87:6",
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nativeSrc": "2100:29:6",
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nativeSrc": "2109:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nativeSrc": "2138:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nativeSrc": "2138:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:6",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:6",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:6",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nativeSrc": "2228:32:6",
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nativeSrc": "2238:16:6",
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:6",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:6",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:6",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nativeSrc": "2309:79:6",
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:6",
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nativeSrc": "2368:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nativeSrc": "2368:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nativeSrc": "2339:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nativeSrc": "2329:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nativeSrc": "2322:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nativeSrc": "2319:63:6",
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:6",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nativeSrc": "2446:87:6",
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nativeSrc": "2456:29:6",
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nativeSrc": "2465:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nativeSrc": "2494:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nativeSrc": "2494:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:6",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:6",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:6",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nativeSrc": "2622:391:6",
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:6",
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nativeSrc": "2670:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nativeSrc": "2670:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nativeSrc": "2639:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nativeSrc": "2635:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nativeSrc": "2632:119:6",
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nativeSrc": "2761:117:6",
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nativeSrc": "2776:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nativeSrc": "2836:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nativeSrc": "2815:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:6",
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nativeSrc": "2903:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nativeSrc": "2964:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nativeSrc": "2943:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:6",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:6",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:6",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:6",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nativeSrc": "3061:48:6",
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nativeSrc": "3071:32:6",
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nativeSrc": "3089:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nativeSrc": "3082:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:6",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:6",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nativeSrc": "3174:50:6",
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nativeSrc": "3196:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nativeSrc": "3184:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nativeSrc": "3184:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:6",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:6",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nativeSrc": "3322:118:6",
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nativeSrc": "3332:26:6",
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nativeSrc": "3340:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nativeSrc": "3415:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nativeSrc": "3368:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nativeSrc": "3368:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:6",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:6",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:6",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nativeSrc": "3511:53:6",
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nativeSrc": "3533:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nativeSrc": "3521:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nativeSrc": "3521:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:6",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:6",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nativeSrc": "3668:124:6",
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nativeSrc": "3678:26:6",
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nativeSrc": "3686:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nativeSrc": "3767:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nativeSrc": "3714:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nativeSrc": "3714:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:6",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:6",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:6",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nativeSrc": "3898:519:6",
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:6",
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nativeSrc": "3946:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nativeSrc": "3946:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nativeSrc": "3915:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nativeSrc": "3911:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nativeSrc": "3908:119:6",
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nativeSrc": "4037:117:6",
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nativeSrc": "4052:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nativeSrc": "4112:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nativeSrc": "4091:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:6",
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nativeSrc": "4179:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nativeSrc": "4240:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nativeSrc": "4219:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:6",
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nativeSrc": "4307:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nativeSrc": "4368:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nativeSrc": "4347:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:6",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:6",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:6",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:6",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:6",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nativeSrc": "4466:43:6",
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nativeSrc": "4476:27:6",
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nativeSrc": "4487:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:6",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:6",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nativeSrc": "4576:51:6",
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nativeSrc": "4598:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nativeSrc": "4586:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nativeSrc": "4586:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:6",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:6",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nativeSrc": "4727:120:6",
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nativeSrc": "4737:26:6",
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nativeSrc": "4745:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nativeSrc": "4822:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nativeSrc": "4773:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nativeSrc": "4773:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:6",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:6",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:6",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nativeSrc": "4919:263:6",
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:6",
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nativeSrc": "4967:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nativeSrc": "4967:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nativeSrc": "4936:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nativeSrc": "4932:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nativeSrc": "4929:119:6",
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nativeSrc": "5058:117:6",
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nativeSrc": "5073:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nativeSrc": "5133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nativeSrc": "5112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4853:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:6",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:6",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:6",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nativeSrc": "5253:53:6",
													"nodeType": "YulBlock",
													"src": "5253:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5270:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5270:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5293:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5293:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5275:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5275:17:6"
																		},
																		"nativeSrc": "5275:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5275:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5263:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:6"
																},
																"nativeSrc": "5263:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5263:37:6"
															},
															"nativeSrc": "5263:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5263:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5188:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:6",
														"nodeType": "YulTypedName",
														"src": "5241:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5248:3:6",
														"nodeType": "YulTypedName",
														"src": "5248:3:6",
														"type": ""
													}
												],
												"src": "5188:118:6"
											},
											{
												"body": {
													"nativeSrc": "5410:124:6",
													"nodeType": "YulBlock",
													"src": "5410:124:6",
													"statements": [
														{
															"nativeSrc": "5420:26:6",
															"nodeType": "YulAssignment",
															"src": "5420:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5432:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5432:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5443:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5443:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5428:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5428:3:6"
																},
																"nativeSrc": "5428:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5428:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5420:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5420:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5500:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:6"
																		},
																		"nativeSrc": "5509:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5456:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5456:43:6"
																},
																"nativeSrc": "5456:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5456:71:6"
															},
															"nativeSrc": "5456:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5456:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5312:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5382:9:6",
														"nodeType": "YulTypedName",
														"src": "5382:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5394:6:6",
														"nodeType": "YulTypedName",
														"src": "5394:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5405:4:6",
														"nodeType": "YulTypedName",
														"src": "5405:4:6",
														"type": ""
													}
												],
												"src": "5312:222:6"
											},
											{
												"body": {
													"nativeSrc": "5623:391:6",
													"nodeType": "YulBlock",
													"src": "5623:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5669:83:6",
																"nodeType": "YulBlock",
																"src": "5669:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5671:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5671:77:6"
																			},
																			"nativeSrc": "5671:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5671:79:6"
																		},
																		"nativeSrc": "5671:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5671:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5644:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5653:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5640:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5640:3:6"
																		},
																		"nativeSrc": "5640:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5640:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5665:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5636:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:6"
																},
																"nativeSrc": "5636:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5636:32:6"
															},
															"nativeSrc": "5633:119:6",
															"nodeType": "YulIf",
															"src": "5633:119:6"
														},
														{
															"nativeSrc": "5762:117:6",
															"nodeType": "YulBlock",
															"src": "5762:117:6",
															"statements": [
																{
																	"nativeSrc": "5777:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5777:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5791:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5791:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5781:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5781:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5806:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5806:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5841:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5852:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5852:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5837:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:6"
																				},
																				"nativeSrc": "5837:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5837:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5861:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5861:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5816:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5816:20:6"
																		},
																		"nativeSrc": "5816:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5816:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5806:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5806:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5889:118:6",
															"nodeType": "YulBlock",
															"src": "5889:118:6",
															"statements": [
																{
																	"nativeSrc": "5904:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5918:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5918:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5908:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5934:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5934:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5969:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5969:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5980:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5980:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5965:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5965:3:6"
																				},
																				"nativeSrc": "5965:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5965:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5989:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5989:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5944:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5944:20:6"
																		},
																		"nativeSrc": "5944:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5934:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5934:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5540:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5585:9:6",
														"nodeType": "YulTypedName",
														"src": "5585:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5596:7:6",
														"nodeType": "YulTypedName",
														"src": "5596:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5608:6:6",
														"nodeType": "YulTypedName",
														"src": "5608:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5616:6:6",
														"nodeType": "YulTypedName",
														"src": "5616:6:6",
														"type": ""
													}
												],
												"src": "5540:474:6"
											},
											{
												"body": {
													"nativeSrc": "6048:152:6",
													"nodeType": "YulBlock",
													"src": "6048:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6065:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6065:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6068:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6068:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6058:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:6"
																},
																"nativeSrc": "6058:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6058:88:6"
															},
															"nativeSrc": "6058:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6058:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6162:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6162:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6165:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6155:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:6"
																},
																"nativeSrc": "6155:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6155:15:6"
															},
															"nativeSrc": "6155:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6155:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6186:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6189:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6189:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6179:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:6"
																},
																"nativeSrc": "6179:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6179:15:6"
															},
															"nativeSrc": "6179:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6179:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6020:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6020:180:6"
											},
											{
												"body": {
													"nativeSrc": "6257:269:6",
													"nodeType": "YulBlock",
													"src": "6257:269:6",
													"statements": [
														{
															"nativeSrc": "6267:22:6",
															"nodeType": "YulAssignment",
															"src": "6267:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6281:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6281:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6287:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6287:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6277:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:6"
																},
																"nativeSrc": "6277:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6277:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6267:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6267:6:6"
																}
															]
														},
														{
															"nativeSrc": "6298:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6298:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6328:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6334:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6334:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6324:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6324:3:6"
																},
																"nativeSrc": "6324:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6324:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6302:18:6",
																	"nodeType": "YulTypedName",
																	"src": "6302:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6375:51:6",
																"nodeType": "YulBlock",
																"src": "6375:51:6",
																"statements": [
																	{
																		"nativeSrc": "6389:27:6",
																		"nodeType": "YulAssignment",
																		"src": "6389:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6403:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6403:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6411:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6411:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6399:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6399:3:6"
																			},
																			"nativeSrc": "6399:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6399:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6389:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6389:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6355:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6355:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6348:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6348:6:6"
																},
																"nativeSrc": "6348:26:6",
																"nodeType": "YulFunctionCall",
																"src": "6348:26:6"
															},
															"nativeSrc": "6345:81:6",
															"nodeType": "YulIf",
															"src": "6345:81:6"
														},
														{
															"body": {
																"nativeSrc": "6478:42:6",
																"nodeType": "YulBlock",
																"src": "6478:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6492:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6492:16:6"
																			},
																			"nativeSrc": "6492:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6492:18:6"
																		},
																		"nativeSrc": "6492:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6442:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6442:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6465:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6473:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6462:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6462:2:6"
																		},
																		"nativeSrc": "6462:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6462:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6439:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6439:2:6"
																},
																"nativeSrc": "6439:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6439:38:6"
															},
															"nativeSrc": "6436:84:6",
															"nodeType": "YulIf",
															"src": "6436:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6206:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6241:4:6",
														"nodeType": "YulTypedName",
														"src": "6241:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6250:6:6",
														"nodeType": "YulTypedName",
														"src": "6250:6:6",
														"type": ""
													}
												],
												"src": "6206:320:6"
											},
											{
												"body": {
													"nativeSrc": "6686:288:6",
													"nodeType": "YulBlock",
													"src": "6686:288:6",
													"statements": [
														{
															"nativeSrc": "6696:26:6",
															"nodeType": "YulAssignment",
															"src": "6696:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6708:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6708:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6719:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6719:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:6"
																},
																"nativeSrc": "6704:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6704:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6696:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6696:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6776:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6776:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6789:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6789:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6800:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6800:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6785:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:6"
																		},
																		"nativeSrc": "6785:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6732:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6732:43:6"
																},
																"nativeSrc": "6732:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6732:71:6"
															},
															"nativeSrc": "6732:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6732:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6857:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6857:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6870:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6870:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6881:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6881:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6866:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:6"
																		},
																		"nativeSrc": "6866:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6813:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6813:43:6"
																},
																"nativeSrc": "6813:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6813:72:6"
															},
															"nativeSrc": "6813:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6813:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6939:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6952:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6963:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:6"
																		},
																		"nativeSrc": "6948:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6895:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6895:43:6"
																},
																"nativeSrc": "6895:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6895:72:6"
															},
															"nativeSrc": "6895:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6895:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6532:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6642:9:6",
														"nodeType": "YulTypedName",
														"src": "6642:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6654:6:6",
														"nodeType": "YulTypedName",
														"src": "6654:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6662:6:6",
														"nodeType": "YulTypedName",
														"src": "6662:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6670:6:6",
														"nodeType": "YulTypedName",
														"src": "6670:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6681:4:6",
														"nodeType": "YulTypedName",
														"src": "6681:4:6",
														"type": ""
													}
												],
												"src": "6532:442:6"
											},
											{
												"body": {
													"nativeSrc": "7008:152:6",
													"nodeType": "YulBlock",
													"src": "7008:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7025:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:77:6",
																		"nodeType": "YulLiteral",
																		"src": "7028:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7018:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:6"
																},
																"nativeSrc": "7018:88:6",
																"nodeType": "YulFunctionCall",
																"src": "7018:88:6"
															},
															"nativeSrc": "7018:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "7018:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7122:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7125:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7115:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:6"
																},
																"nativeSrc": "7115:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7115:15:6"
															},
															"nativeSrc": "7115:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7115:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7146:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7146:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7149:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7139:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:6"
																},
																"nativeSrc": "7139:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7139:15:6"
															},
															"nativeSrc": "7139:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7139:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6980:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:180:6"
											},
											{
												"body": {
													"nativeSrc": "7210:147:6",
													"nodeType": "YulBlock",
													"src": "7210:147:6",
													"statements": [
														{
															"nativeSrc": "7220:25:6",
															"nodeType": "YulAssignment",
															"src": "7220:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7243:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7225:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:6"
																},
																"nativeSrc": "7225:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7225:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7220:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:6"
																}
															]
														},
														{
															"nativeSrc": "7254:25:6",
															"nodeType": "YulAssignment",
															"src": "7254:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7277:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7259:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:6"
																},
																"nativeSrc": "7259:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7259:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7254:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:6"
																}
															]
														},
														{
															"nativeSrc": "7288:16:6",
															"nodeType": "YulAssignment",
															"src": "7288:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7299:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7299:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7302:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7302:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7295:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7295:3:6"
																},
																"nativeSrc": "7295:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7295:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7288:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7288:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7328:22:6",
																"nodeType": "YulBlock",
																"src": "7328:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7330:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7330:16:6"
																			},
																			"nativeSrc": "7330:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7330:18:6"
																		},
																		"nativeSrc": "7330:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7330:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7320:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7320:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7323:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7317:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7317:2:6"
																},
																"nativeSrc": "7317:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7317:10:6"
															},
															"nativeSrc": "7314:36:6",
															"nodeType": "YulIf",
															"src": "7314:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7166:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7197:1:6",
														"nodeType": "YulTypedName",
														"src": "7197:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7200:1:6",
														"nodeType": "YulTypedName",
														"src": "7200:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7206:3:6",
														"nodeType": "YulTypedName",
														"src": "7206:3:6",
														"type": ""
													}
												],
												"src": "7166:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c8063715018a61161006f578063715018a6146101a05780638da5cb5b146101aa57806395d89b41146101c8578063a9059cbb146101e6578063dd62ed3e14610216578063f2fde38b14610246576100b2565b806306fdde03146100b6578063095ea7b3146100d457806318160ddd1461010457806323b872dd14610122578063313ce5671461015257806370a0823114610170575b5f80fd5b6100be610262565b6040516100cb9190610ce3565b60405180910390f35b6100ee60048036038101906100e99190610d94565b6102f2565b6040516100fb9190610dec565b60405180910390f35b61010c610314565b6040516101199190610e14565b60405180910390f35b61013c60048036038101906101379190610e2d565b61031d565b6040516101499190610dec565b60405180910390f35b61015a61034b565b6040516101679190610e98565b60405180910390f35b61018a60048036038101906101859190610eb1565b610353565b6040516101979190610e14565b60405180910390f35b6101a8610399565b005b6101b26103ac565b6040516101bf9190610eeb565b60405180910390f35b6101d06103d3565b6040516101dd9190610ce3565b60405180910390f35b61020060048036038101906101fb9190610d94565b610463565b60405161020d9190610dec565b60405180910390f35b610230600480360381019061022b9190610f04565b610485565b60405161023d9190610e14565b60405180910390f35b610260600480360381019061025b9190610eb1565b610507565b005b60606004805461027190610f6f565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90610f6f565b80156102e85780601f106102bf576101008083540402835291602001916102e8565b820191905f5260205f20905b8154815290600101906020018083116102cb57829003601f168201915b5050505050905090565b5f806102fc61058b565b9050610309818585610592565b600191505092915050565b5f600354905090565b5f8061032761058b565b90506103348582856105a4565b61033f858585610636565b60019150509392505050565b5f6012905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6103a1610726565b6103aa5f6107ad565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546103e290610f6f565b80601f016020809104026020016040519081016040528092919081815260200182805461040e90610f6f565b80156104595780601f1061043057610100808354040283529160200191610459565b820191905f5260205f20905b81548152906001019060200180831161043c57829003601f168201915b5050505050905090565b5f8061046d61058b565b905061047a818585610636565b600191505092915050565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61050f610726565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361057f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105769190610eeb565b60405180910390fd5b610588816107ad565b50565b5f33905090565b61059f838383600161086e565b505050565b5f6105af8484610485565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106305781811015610621578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161061893929190610f9f565b60405180910390fd5b61062f84848484035f61086e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106a6575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161069d9190610eeb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610716575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161070d9190610eeb565b60405180910390fd5b610721838383610a3d565b505050565b61072e61058b565b73ffffffffffffffffffffffffffffffffffffffff1661074c6103ac565b73ffffffffffffffffffffffffffffffffffffffff16146107ab5761076f61058b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107a29190610eeb565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036108de575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108d59190610eeb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361094e575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016109459190610eeb565b60405180910390fd5b8160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610a37578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a2e9190610e14565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a8d578060035f828254610a819190611001565b92505081905550610b5d565b5f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610b17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610b0e93929190610f9f565b60405180910390fd5b81810360015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba4578060035f8282540392505081905550610bef565b8060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c4c9190610e14565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610c90578082015181840152602081019050610c75565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610cb582610c59565b610cbf8185610c63565b9350610ccf818560208601610c73565b610cd881610c9b565b840191505092915050565b5f6020820190508181035f830152610cfb8184610cab565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d3082610d07565b9050919050565b610d4081610d26565b8114610d4a575f80fd5b50565b5f81359050610d5b81610d37565b92915050565b5f819050919050565b610d7381610d61565b8114610d7d575f80fd5b50565b5f81359050610d8e81610d6a565b92915050565b5f8060408385031215610daa57610da9610d03565b5b5f610db785828601610d4d565b9250506020610dc885828601610d80565b9150509250929050565b5f8115159050919050565b610de681610dd2565b82525050565b5f602082019050610dff5f830184610ddd565b92915050565b610e0e81610d61565b82525050565b5f602082019050610e275f830184610e05565b92915050565b5f805f60608486031215610e4457610e43610d03565b5b5f610e5186828701610d4d565b9350506020610e6286828701610d4d565b9250506040610e7386828701610d80565b9150509250925092565b5f60ff82169050919050565b610e9281610e7d565b82525050565b5f602082019050610eab5f830184610e89565b92915050565b5f60208284031215610ec657610ec5610d03565b5b5f610ed384828501610d4d565b91505092915050565b610ee581610d26565b82525050565b5f602082019050610efe5f830184610edc565b92915050565b5f8060408385031215610f1a57610f19610d03565b5b5f610f2785828601610d4d565b9250506020610f3885828601610d4d565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610f8657607f821691505b602082108103610f9957610f98610f42565b5b50919050565b5f606082019050610fb25f830186610edc565b610fbf6020830185610e05565b610fcc6040830184610e05565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61100b82610d61565b915061101683610d61565b925082820190508082111561102e5761102d610fd4565b5b9291505056fea264697066735822122026becd99efa2f95bca67cfd88b013cad2fc0aa27553f859228de798bf56ab80a64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x246 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x399 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x271 SWAP1 PUSH2 0xF6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x29D SWAP1 PUSH2 0xF6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x2FC PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x309 DUP2 DUP6 DUP6 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x327 PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x334 DUP6 DUP3 DUP6 PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x33F DUP6 DUP6 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0x726 JUMP JUMPDEST PUSH2 0x3AA PUSH0 PUSH2 0x7AD JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x3E2 SWAP1 PUSH2 0xF6F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40E SWAP1 PUSH2 0xF6F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x459 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x430 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x459 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x46D PUSH2 0x58B JUMP JUMPDEST SWAP1 POP PUSH2 0x47A DUP2 DUP6 DUP6 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x50F PUSH2 0x726 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x57F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x7AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x59F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x86E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5AF DUP5 DUP5 PUSH2 0x485 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x630 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x621 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x618 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x86E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6A6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x716 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x721 DUP4 DUP4 DUP4 PUSH2 0xA3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x72E PUSH2 0x58B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x74C PUSH2 0x3AC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AB JUMPI PUSH2 0x76F PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x94E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x945 SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA37 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA8D JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA81 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB5D JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA4 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBEF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC4C SWAP2 SWAP1 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC90 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC75 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB5 DUP3 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0xCBF DUP2 DUP6 PUSH2 0xC63 JUMP JUMPDEST SWAP4 POP PUSH2 0xCCF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC73 JUMP JUMPDEST PUSH2 0xCD8 DUP2 PUSH2 0xC9B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCFB DUP2 DUP5 PUSH2 0xCAB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD30 DUP3 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD40 DUP2 PUSH2 0xD26 JUMP JUMPDEST DUP2 EQ PUSH2 0xD4A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD5B DUP2 PUSH2 0xD37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD73 DUP2 PUSH2 0xD61 JUMP JUMPDEST DUP2 EQ PUSH2 0xD7D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD8E DUP2 PUSH2 0xD6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAA JUMPI PUSH2 0xDA9 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB7 DUP6 DUP3 DUP7 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDC8 DUP6 DUP3 DUP7 ADD PUSH2 0xD80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE6 DUP2 PUSH2 0xDD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDFF PUSH0 DUP4 ADD DUP5 PUSH2 0xDDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE0E DUP2 PUSH2 0xD61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE27 PUSH0 DUP4 ADD DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE51 DUP7 DUP3 DUP8 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE62 DUP7 DUP3 DUP8 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE73 DUP7 DUP3 DUP8 ADD PUSH2 0xD80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE92 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAB PUSH0 DUP4 ADD DUP5 PUSH2 0xE89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC6 JUMPI PUSH2 0xEC5 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED3 DUP5 DUP3 DUP6 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE5 DUP2 PUSH2 0xD26 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEFE PUSH0 DUP4 ADD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1A JUMPI PUSH2 0xF19 PUSH2 0xD03 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF27 DUP6 DUP3 DUP7 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF38 DUP6 DUP3 DUP7 ADD PUSH2 0xD4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF86 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF99 JUMPI PUSH2 0xF98 PUSH2 0xF42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xFB2 PUSH0 DUP4 ADD DUP7 PUSH2 0xEDC JUMP JUMPDEST PUSH2 0xFBF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0xFCC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x100B DUP3 PUSH2 0xD61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1016 DUP4 PUSH2 0xD61 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x102E JUMPI PUSH2 0x102D PUSH2 0xFD4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xBE 0xCD SWAP10 0xEF LOG2 0xF9 JUMPDEST 0xCA PUSH8 0xCFD88B013CAD2FC0 0xAA 0x27 SSTORE EXTCODEHASH DUP6 SWAP3 0x28 0xDE PUSH26 0x8BF56AB80A64736F6C6343000815003300000000000000000000 ",
							"sourceMap": "1500:9799:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2231:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4450:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3301:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5196:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3159:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3456:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2433:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3767:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4003:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2231:89:5;2276:13;2308:5;2301:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2231:89;:::o;4450:186::-;4523:4;4539:13;4555:12;:10;:12::i;:::-;4539:28;;4577:31;4586:5;4593:7;4602:5;4577:8;:31::i;:::-;4625:4;4618:11;;;4450:186;;;;:::o;3301:97::-;3353:7;3379:12;;3372:19;;3301:97;:::o;5196:244::-;5283:4;5299:15;5317:12;:10;:12::i;:::-;5299:30;;5339:37;5355:4;5361:7;5370:5;5339:15;:37::i;:::-;5386:26;5396:4;5402:2;5406:5;5386:9;:26::i;:::-;5429:4;5422:11;;;5196:244;;;;;:::o;3159:82::-;3208:5;3232:2;3225:9;;3159:82;:::o;3456:116::-;3521:7;3547:9;:18;3557:7;3547:18;;;;;;;;;;;;;;;;3540:25;;3456:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2433:93:5:-;2480:13;2512:7;2505:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2433:93;:::o;3767:178::-;3836:4;3852:13;3868:12;:10;:12::i;:::-;3852:28;;3890:27;3900:5;3907:2;3911:5;3890:9;:27::i;:::-;3934:4;3927:11;;;3767:178;;;;:::o;4003:140::-;4083:7;4109:11;:18;4121:5;4109:18;;;;;;;;;;;;;;;:27;4128:7;4109:27;;;;;;;;;;;;;;;;4102:34;;4003:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;9146:128:5:-;9230:37;9239:5;9246:7;9255:5;9262:4;9230:8;:37::i;:::-;9146:128;;;:::o;10820:477::-;10919:24;10946:25;10956:5;10963:7;10946:9;:25::i;:::-;10919:52;;11005:17;10985:16;:37;10981:310;;11061:5;11042:16;:24;11038:130;;;11120:7;11129:16;11147:5;11093:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11038:130;11209:57;11218:5;11225:7;11253:5;11234:16;:24;11260:5;11209:8;:57::i;:::-;10981:310;10909:388;10820:477;;;:::o;5813:300::-;5912:1;5896:18;;:4;:18;;;5892:86;;5964:1;5937:30;;;;;;;;;;;:::i;:::-;;;;;;;;5892:86;6005:1;5991:16;;:2;:16;;;5987:86;;6059:1;6030:32;;;;;;;;;;;:::i;:::-;;;;;;;;5987:86;6082:24;6090:4;6096:2;6100:5;6082:7;:24::i;:::-;5813:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10106:432:5:-;10235:1;10218:19;;:5;:19;;;10214:89;;10289:1;10260:32;;;;;;;;;;;:::i;:::-;;;;;;;;10214:89;10335:1;10316:21;;:7;:21;;;10312:90;;10388:1;10360:31;;;;;;;;;;;:::i;:::-;;;;;;;;10312:90;10441:5;10411:11;:18;10423:5;10411:18;;;;;;;;;;;;;;;:27;10430:7;10411:27;;;;;;;;;;;;;;;:35;;;;10460:9;10456:76;;;10506:7;10490:31;;10499:5;10490:31;;;10515:5;10490:31;;;;;;:::i;:::-;;;;;;;;10456:76;10106:432;;;;:::o;6428:1107::-;6533:1;6517:18;;:4;:18;;;6513:540;;6669:5;6653:12;;:21;;;;;;;:::i;:::-;;;;;;;;6513:540;;;6705:19;6727:9;:15;6737:4;6727:15;;;;;;;;;;;;;;;;6705:37;;6774:5;6760:11;:19;6756:115;;;6831:4;6837:11;6850:5;6806:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6756:115;7023:5;7009:11;:19;6991:9;:15;7001:4;6991:15;;;;;;;;;;;;;;;:37;;;;6691:362;6513:540;7081:1;7067:16;;:2;:16;;;7063:425;;7246:5;7230:12;;:21;;;;;;;;;;;7063:425;;;7458:5;7441:9;:13;7451:2;7441:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;7063:425;7518:2;7503:25;;7512:4;7503:25;;;7522:5;7503:25;;;;;;:::i;:::-;;;;;;;;6428:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:474::-;5608:6;5616;5665:2;5653:9;5644:7;5640:23;5636:32;5633:119;;;5671:79;;:::i;:::-;5633:119;5791:1;5816:53;5861:7;5852:6;5841:9;5837:22;5816:53;:::i;:::-;5806:63;;5762:117;5918:2;5944:53;5989:7;5980:6;5969:9;5965:22;5944:53;:::i;:::-;5934:63;;5889:118;5540:474;;;;;:::o;6020:180::-;6068:77;6065:1;6058:88;6165:4;6162:1;6155:15;6189:4;6186:1;6179:15;6206:320;6250:6;6287:1;6281:4;6277:12;6267:22;;6334:1;6328:4;6324:12;6355:18;6345:81;;6411:4;6403:6;6399:17;6389:27;;6345:81;6473:2;6465:6;6462:14;6442:18;6439:38;6436:84;;6492:18;;:::i;:::-;6436:84;6257:269;6206:320;;;:::o;6532:442::-;6681:4;6719:2;6708:9;6704:18;6696:26;;6732:71;6800:1;6789:9;6785:17;6776:6;6732:71;:::i;:::-;6813:72;6881:2;6870:9;6866:18;6857:6;6813:72;:::i;:::-;6895;6963:2;6952:9;6948:18;6939:6;6895:72;:::i;:::-;6532:442;;;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "840400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"decimals()": "427",
								"name()": "infinite",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_approve(address,address,uint256,bool)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1500,
									"end": 11299,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1999,
									"end": 2166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2040,
									"end": 2050,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "4170757320546F6B656E20416C70686100000000000000000000000000000000"
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2067,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2062,
									"end": 2088,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2088,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "4150546100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2105,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2098,
									"end": 2114,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2114,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2148,
									"end": 2159,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2133,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2134,
									"end": 2144,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2124,
									"end": 2145,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2159,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2159,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2159,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2124,
									"end": 2159,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1999,
									"end": 2166,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1088,
									"end": 1095,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1117,
									"end": 1171,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1227,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1267,
									"end": 1272,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1249,
									"end": 1273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1183,
									"end": 1279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1390,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1372,
									"end": 1396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1367,
									"end": 1370,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1360,
									"end": 1397,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1285,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1502,
									"end": 1506,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1538,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1525,
									"end": 1543,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1619,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1606,
									"end": 1623,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1597,
									"end": 1603,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1553,
									"end": 1624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1409,
									"end": 1631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1736,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1637,
									"end": 1736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1689,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1723,
									"end": 1728,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1729,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1707,
									"end": 1729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1707,
									"end": 1729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1736,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1736,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1736,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1637,
									"end": 1736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1742,
									"end": 1922,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1742,
									"end": 1922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1790,
									"end": 1867,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1780,
									"end": 1868,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1887,
									"end": 1891,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1884,
									"end": 1885,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1877,
									"end": 1892,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1911,
									"end": 1915,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1908,
									"end": 1909,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1901,
									"end": 1916,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1928,
									"end": 2108,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1928,
									"end": 2108,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 2053,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1973,
									"end": 1974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1966,
									"end": 2054,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2077,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2070,
									"end": 2071,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2063,
									"end": 2078,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2094,
									"end": 2095,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2087,
									"end": 2102,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2434,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2114,
									"end": 2434,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2195,
									"end": 2196,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2189,
									"end": 2193,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2185,
									"end": 2197,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2175,
									"end": 2197,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2175,
									"end": 2197,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2242,
									"end": 2243,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2232,
									"end": 2244,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2263,
									"end": 2281,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2253,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2253,
									"end": 2334,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2319,
									"end": 2323,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2311,
									"end": 2317,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2307,
									"end": 2324,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2297,
									"end": 2324,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2297,
									"end": 2324,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2253,
									"end": 2334,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 2253,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2381,
									"end": 2383,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2373,
									"end": 2379,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2370,
									"end": 2384,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2350,
									"end": 2368,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2347,
									"end": 2385,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2344,
									"end": 2428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2344,
									"end": 2428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2400,
									"end": 2418,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2400,
									"end": 2418,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2400,
									"end": 2418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2400,
									"end": 2418,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2400,
									"end": 2418,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2344,
									"end": 2428,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 2344,
									"end": 2428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2165,
									"end": 2434,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2434,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2434,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2434,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2434,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2581,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2440,
									"end": 2581,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2489,
									"end": 2493,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2512,
									"end": 2515,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2504,
									"end": 2515,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2504,
									"end": 2515,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2535,
									"end": 2538,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2532,
									"end": 2533,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2539,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2569,
									"end": 2573,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2566,
									"end": 2567,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2556,
									"end": 2574,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2548,
									"end": 2574,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2548,
									"end": 2574,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2581,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2581,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2581,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2440,
									"end": 2581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2587,
									"end": 2680,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2587,
									"end": 2680,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2630,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2671,
									"end": 2673,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2666,
									"end": 2668,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2659,
									"end": 2664,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2655,
									"end": 2669,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2651,
									"end": 2674,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2641,
									"end": 2674,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2641,
									"end": 2674,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2587,
									"end": 2680,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2587,
									"end": 2680,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2587,
									"end": 2680,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2587,
									"end": 2680,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2686,
									"end": 2793,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2686,
									"end": 2793,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2730,
									"end": 2738,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2785,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2774,
									"end": 2778,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2770,
									"end": 2786,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2749,
									"end": 2786,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2749,
									"end": 2786,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2686,
									"end": 2793,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2686,
									"end": 2793,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2686,
									"end": 2793,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2686,
									"end": 2793,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2686,
									"end": 2793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2799,
									"end": 3192,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 2799,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2868,
									"end": 2874,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2918,
									"end": 2919,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2906,
									"end": 2916,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2902,
									"end": 2920,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 3038,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2971,
									"end": 3037,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2960,
									"end": 2969,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 3038,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2941,
									"end": 3038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2941,
									"end": 3038,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 2941,
									"end": 3038,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3059,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3089,
									"end": 3097,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3087,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3059,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3059,
									"end": 3098,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3059,
									"end": 3098,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3059,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3047,
									"end": 3098,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3047,
									"end": 3098,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3131,
									"end": 3135,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3136,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3120,
									"end": 3125,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3116,
									"end": 3137,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3107,
									"end": 3137,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3107,
									"end": 3137,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3180,
									"end": 3184,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3166,
									"end": 3185,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3159,
									"end": 3164,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3156,
									"end": 3186,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3146,
									"end": 3186,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3146,
									"end": 3186,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2875,
									"end": 3192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2875,
									"end": 3192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2799,
									"end": 3192,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2799,
									"end": 3192,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2799,
									"end": 3192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2799,
									"end": 3192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2799,
									"end": 3192,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2799,
									"end": 3192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3226,
									"end": 3229,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3247,
									"end": 3252,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3198,
									"end": 3258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3323,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3392,
									"end": 3397,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 3374,
									"end": 3398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 3365,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 3347,
									"end": 3400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3264,
									"end": 3406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3455,
									"end": 3458,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3476,
									"end": 3481,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3412,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3634,
									"end": 3641,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3603,
									"end": 3642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3737,
									"end": 3753,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3713,
									"end": 3754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3698,
									"end": 3702,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3692,
									"end": 3703,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3664,
									"end": 3755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3756,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3569,
									"end": 3762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3493,
									"end": 3762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3813,
									"end": 3816,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3768,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 3924,
									"end": 3956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4023,
									"end": 4029,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4015,
									"end": 4021,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4009,
									"end": 4013,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3965,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3900,
									"end": 4036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3847,
									"end": 4036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4119,
									"end": 4122,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4109,
									"end": 4123,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4210,
									"end": 4211,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4173,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4146,
									"end": 4147,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4139,
									"end": 4144,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4135,
									"end": 4148,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4042,
									"end": 4228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 4337,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4330,
									"end": 4333,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4327,
									"end": 4338,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4401,
									"end": 4406,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 4369,
									"end": 4407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4471,
									"end": 4481,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4453,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4439,
									"end": 4483,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4636,
									"end": 4638,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4624,
									"end": 4634,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4621,
									"end": 4639,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4657,
									"end": 4665,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4754,
									"end": 4757,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4736,
									"end": 4758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4726,
									"end": 4734,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4722,
									"end": 4759,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4709,
									"end": 4720,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 4680,
									"end": 4760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4234,
									"end": 4777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4837,
									"end": 4845,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4887,
									"end": 4892,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4881,
									"end": 4885,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4877,
									"end": 4893,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4783,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 4956,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5031,
									"end": 5032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5027,
									"end": 5033,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5019,
									"end": 5024,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5016,
									"end": 5017,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 4983,
									"end": 5034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4979,
									"end": 5035,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5064,
									"end": 5068,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5058,
									"end": 5062,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5054,
									"end": 5069,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4957,
									"end": 5075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4906,
									"end": 5075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5156,
									"end": 5160,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5327,
									"end": 5330,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5321,
									"end": 5325,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 5302,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5364,
									"end": 5367,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5361,
									"end": 5362,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5357,
									"end": 5368,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5351,
									"end": 5355,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5348,
									"end": 5369,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5080,
									"end": 5375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5530,
									"end": 5533,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 5497,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5599,
									"end": 5617,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5591,
									"end": 5597,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5588,
									"end": 5618,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 5621,
									"end": 5639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 5697,
									"end": 5701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5691,
									"end": 5702,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 5665,
									"end": 5703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 5810,
									"end": 5816,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5802,
									"end": 5808,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5796,
									"end": 5800,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 5750,
									"end": 5817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5844,
									"end": 5845,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5868,
									"end": 5872,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5900,
									"end": 5902,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5892,
									"end": 5898,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5889,
									"end": 5903,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5917,
									"end": 5918,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6574,
									"end": 6575,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6591,
									"end": 6597,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6640,
									"end": 6649,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6635,
									"end": 6638,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6631,
									"end": 6650,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6625,
									"end": 6651,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6751,
									"end": 6757,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6744,
									"end": 6749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 6691,
									"end": 6758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6685,
									"end": 6689,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6678,
									"end": 6759,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6547,
									"end": 6769,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5964,
									"end": 5968,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5960,
									"end": 5969,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5952,
									"end": 5958,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5948,
									"end": 5970,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 5998,
									"end": 6035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6057,
									"end": 6058,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6082,
									"end": 6083,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6079,
									"end": 6093,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6164,
									"end": 6173,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6159,
									"end": 6162,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6155,
									"end": 6174,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6149,
									"end": 6175,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6134,
									"end": 6176,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6215,
									"end": 6216,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6207,
									"end": 6213,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6203,
									"end": 6217,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6262,
									"end": 6264,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6251,
									"end": 6260,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6247,
									"end": 6265,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6108,
									"end": 6112,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6105,
									"end": 6106,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6101,
									"end": 6113,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6307,
									"end": 6313,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6298,
									"end": 6305,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6365,
									"end": 6374,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6360,
									"end": 6363,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6356,
									"end": 6375,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6350,
									"end": 6376,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 6450,
									"end": 6454,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6442,
									"end": 6448,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6438,
									"end": 6455,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6427,
									"end": 6436,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 6408,
									"end": 6456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6400,
									"end": 6406,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6393,
									"end": 6457,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6315,
									"end": 6471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6517,
									"end": 6518,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6513,
									"end": 6514,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6505,
									"end": 6511,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6501,
									"end": 6515,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6497,
									"end": 6519,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6484,
									"end": 6520,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5380,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1500,
									"end": 11299,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026becd99efa2f95bca67cfd88b013cad2fc0aa27553f859228de798bf56ab80a64736f6c63430008150033",
									".code": [
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 11299,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2231,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2231,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4450,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4450,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4450,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3301,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3301,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5196,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 5196,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5196,
											"end": 5440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3159,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3159,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3456,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3456,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3456,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2433,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2433,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3767,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3767,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3767,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4003,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4003,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4003,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2289,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2308,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2301,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2301,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2301,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4552,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4555,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4555,
											"end": 4567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4567,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4555,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4586,
											"end": 4591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4593,
											"end": 4600,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4602,
											"end": 4607,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4577,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 4629,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4618,
											"end": 4629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3391,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3379,
											"end": 3391,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 5317,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5317,
											"end": 5329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5329,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 5317,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5355,
											"end": 5359,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5361,
											"end": 5368,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5375,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 5339,
											"end": 5376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5376,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5339,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 5396,
											"end": 5400,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5406,
											"end": 5411,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5386,
											"end": 5412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5412,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 5386,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5429,
											"end": 5433,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5422,
											"end": 5433,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3234,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3159,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3556,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3565,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2505,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2505,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3868,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3868,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3880,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3868,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3916,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3890,
											"end": 3917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3917,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3890,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3938,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3927,
											"end": 3938,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3767,
											"end": 3945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4083,
											"end": 4090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4120,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4127,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4135,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4109,
											"end": 4136,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9146,
											"end": 9274,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 9146,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 9239,
											"end": 9244,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9246,
											"end": 9253,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9255,
											"end": 9260,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9262,
											"end": 9266,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9230,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 9230,
											"end": 9267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9267,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 9230,
											"end": 9267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9146,
											"end": 9274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9146,
											"end": 9274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9146,
											"end": 9274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9146,
											"end": 9274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10820,
											"end": 11297,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 10820,
											"end": 11297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10919,
											"end": 10943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10946,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 10956,
											"end": 10961,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10946,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10946,
											"end": 10971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10946,
											"end": 10971,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 10946,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10919,
											"end": 10971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10919,
											"end": 10971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11005,
											"end": 11022,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10985,
											"end": 11001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10985,
											"end": 11022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10981,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 10981,
											"end": 11291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11042,
											"end": 11058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11042,
											"end": 11066,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11168,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 11038,
											"end": 11168,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11120,
											"end": 11127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11129,
											"end": 11145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11147,
											"end": 11152,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 11093,
											"end": 11153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11093,
											"end": 11153,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11168,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 11038,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11209,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 11218,
											"end": 11223,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11225,
											"end": 11232,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11253,
											"end": 11258,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11234,
											"end": 11250,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11234,
											"end": 11258,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11260,
											"end": 11265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11209,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 11209,
											"end": 11266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11209,
											"end": 11266,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 11209,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10981,
											"end": 11291,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 10981,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10909,
											"end": 11297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10820,
											"end": 11297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10820,
											"end": 11297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10820,
											"end": 11297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10820,
											"end": 11297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6113,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5813,
											"end": 6113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5892,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5892,
											"end": 5978,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 5965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 5937,
											"end": 5967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5892,
											"end": 5978,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5892,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6005,
											"end": 6006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6007,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 6007,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 5993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6007,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5991,
											"end": 6007,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5991,
											"end": 6007,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5987,
											"end": 6073,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6059,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 6030,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6062,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6073,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5987,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6082,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 6090,
											"end": 6094,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6098,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6105,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6082,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6082,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6082,
											"end": 6106,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 6082,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5813,
											"end": 6113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10538,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 10106,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10235,
											"end": 10236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10218,
											"end": 10237,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10218,
											"end": 10237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10223,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10237,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10218,
											"end": 10237,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10237,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10214,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 10214,
											"end": 10303,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10289,
											"end": 10290,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 10260,
											"end": 10292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10214,
											"end": 10303,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 10214,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10335,
											"end": 10336,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10337,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10316,
											"end": 10337,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10316,
											"end": 10323,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10316,
											"end": 10337,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10316,
											"end": 10337,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10316,
											"end": 10337,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 10312,
											"end": 10402,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10388,
											"end": 10389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 10360,
											"end": 10391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10391,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10312,
											"end": 10402,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 10312,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10422,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10428,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10430,
											"end": 10437,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10438,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10446,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10460,
											"end": 10469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10456,
											"end": 10532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10456,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 10456,
											"end": 10532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10515,
											"end": 10520,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 10490,
											"end": 10521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10490,
											"end": 10521,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 10456,
											"end": 10532,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 10456,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10106,
											"end": 10538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6428,
											"end": 7535,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6428,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6513,
											"end": 7053,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6674,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6665,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6653,
											"end": 6665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6653,
											"end": 6674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6653,
											"end": 6674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6513,
											"end": 7053,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 7053,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6513,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6736,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6741,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6727,
											"end": 6742,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6742,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6760,
											"end": 6771,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6760,
											"end": 6779,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6756,
											"end": 6871,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6756,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6756,
											"end": 6871,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6831,
											"end": 6835,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6837,
											"end": 6848,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 6806,
											"end": 6856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6856,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6756,
											"end": 6871,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6756,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7023,
											"end": 7028,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7009,
											"end": 7020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7009,
											"end": 7028,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7000,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7005,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7028,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7028,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 7028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6691,
											"end": 7053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 7053,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6513,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7067,
											"end": 7069,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7067,
											"end": 7083,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7063,
											"end": 7488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7242,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 7230,
											"end": 7242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7230,
											"end": 7251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7063,
											"end": 7488,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7488,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7063,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7463,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7453,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7463,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7488,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 7063,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7516,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7522,
											"end": 7527,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7503,
											"end": 7528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7528,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6428,
											"end": 7535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6428,
											"end": 7535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6428,
											"end": 7535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6428,
											"end": 7535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5293,
											"end": 5298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5275,
											"end": 5299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5275,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5263,
											"end": 5300,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5405,
											"end": 5409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5428,
											"end": 5446,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5420,
											"end": 5446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5456,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5456,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5608,
											"end": 5614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5651,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5663,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5636,
											"end": 5668,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5671,
											"end": 5750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5671,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5633,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5861,
											"end": 5868,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5816,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5816,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5806,
											"end": 5869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5762,
											"end": 5879,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5918,
											"end": 5920,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5989,
											"end": 5996,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5965,
											"end": 5987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5944,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5944,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5934,
											"end": 5997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 6014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6020,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6145,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6065,
											"end": 6066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6058,
											"end": 6146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6155,
											"end": 6170,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6193,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6267,
											"end": 6289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6328,
											"end": 6332,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6324,
											"end": 6336,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6373,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6403,
											"end": 6409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6399,
											"end": 6416,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6345,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6462,
											"end": 6476,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6442,
											"end": 6460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6439,
											"end": 6477,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6492,
											"end": 6510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6436,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6206,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6721,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6732,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6813,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 6961,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6895,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6980,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7028,
											"end": 7105,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7106,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7129,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7115,
											"end": 7130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7154,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7320,
											"end": 7321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7327,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 7314,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7166,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/account1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/account1.sol\":\"ApusToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/account1.sol\":{\"keccak256\":\"0x627c7f7550b5d1f87815b4a91aec198ec9b04ad153a541591f30bbf7020428e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74ed4ae06bfb2dd6a420a6e37f29bfe31b895f0a938e5303e9808491600ef5e\",\"dweb:/ipfs/QmPph1LsxFEKohjWZD1NC434nFKyZCHWJu4wyXLPxgxtag\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/account1.sol:ApusToken",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 437,
								"contract": "contracts/account1.sol:ApusToken",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 443,
								"contract": "contracts/account1.sol:ApusToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 445,
								"contract": "contracts/account1.sol:ApusToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 447,
								"contract": "contracts/account1.sol:ApusToken",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 449,
								"contract": "contracts/account1.sol:ApusToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							410
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 411,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 410,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 410,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								410
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							362
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 362,
							"linearizedBaseContracts": [
								362
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 296,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 305,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 362,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 362,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 362,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 362,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 362,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 362,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 363,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								296,
								305
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							362
						],
						"IERC20Metadata": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 366,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 389,
							"sourceUnit": 363,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 365,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 362,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 368,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "305:6:3"
									},
									"id": 369,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 367,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388,
								362
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 372,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 388,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 378,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 388,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 384,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 388,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								296,
								305
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							410
						]
					},
					"id": 411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 410,
							"linearizedBaseContracts": [
								410
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 396,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 395,
												"id": 398,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 410,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 405,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 404,
												"id": 407,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 410,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 411,
							"src": "624:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:4"
				},
				"id": 4
			},
			"contracts/account1.sol": {
				"ast": {
					"absolutePath": "contracts/account1.sol",
					"exportedSymbols": {
						"ApusToken": [
							938
						],
						"Context": [
							410
						],
						"IERC20": [
							362
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							388
						],
						"Ownable": [
							147
						]
					},
					"id": 939,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 414,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 939,
							"sourceUnit": 148,
							"src": "58:67:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 413,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "66:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 939,
							"sourceUnit": 363,
							"src": "126:70:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 415,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 362,
										"src": "134:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 418,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 939,
							"sourceUnit": 389,
							"src": "197:97:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 417,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 388,
										"src": "205:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 420,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 939,
							"sourceUnit": 411,
							"src": "295:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 419,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 410,
										"src": "303:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 422,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 939,
							"sourceUnit": 285,
							"src": "362:83:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 421,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "370:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 424,
										"name": "Context",
										"nameLocations": [
											"1522:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 410,
										"src": "1522:7:5"
									},
									"id": 425,
									"nodeType": "InheritanceSpecifier",
									"src": "1522:7:5"
								},
								{
									"baseName": {
										"id": 426,
										"name": "IERC20",
										"nameLocations": [
											"1531:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "1531:6:5"
									},
									"id": 427,
									"nodeType": "InheritanceSpecifier",
									"src": "1531:6:5"
								},
								{
									"baseName": {
										"id": 428,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1539:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1539:14:5"
									},
									"id": 429,
									"nodeType": "InheritanceSpecifier",
									"src": "1539:14:5"
								},
								{
									"baseName": {
										"id": 430,
										"name": "IERC20Errors",
										"nameLocations": [
											"1555:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1555:12:5"
									},
									"id": 431,
									"nodeType": "InheritanceSpecifier",
									"src": "1555:12:5"
								},
								{
									"baseName": {
										"id": 432,
										"name": "Ownable",
										"nameLocations": [
											"1569:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1569:7:5"
									},
									"id": 433,
									"nodeType": "InheritanceSpecifier",
									"src": "1569:7:5"
								}
							],
							"canonicalName": "ApusToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 423,
								"nodeType": "StructuredDocumentation",
								"src": "447:1052:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 938,
							"linearizedBaseContracts": [
								938,
								147,
								189,
								388,
								362,
								410
							],
							"name": "ApusToken",
							"nameLocation": "1509:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 437,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1627:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "1583:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 436,
										"keyName": "account",
										"keyNameLocation": "1599:7:5",
										"keyType": {
											"id": 434,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1591:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1583:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 435,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1610:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 443,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1715:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "1643:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 442,
										"keyName": "account",
										"keyNameLocation": "1659:7:5",
										"keyType": {
											"id": 438,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1651:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1643:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 441,
											"keyName": "spender",
											"keyNameLocation": "1686:7:5",
											"keyType": {
												"id": 439,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1670:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 440,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1697:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1749:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "1733:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 444,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1733:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1783:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "1768:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 446,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1768:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 449,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1809:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 938,
									"src": "1794:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 448,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1794:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "2052:114:5",
										"statements": [
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 459,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "2062:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4170757320546f6b656e20416c706861",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2070:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_ad3bcfd116252ed2d1590e2c1c6f2cacd254155599f423c4313ee6227462194a",
															"typeString": "literal_string \"Apus Token Alpha\""
														},
														"value": "Apus Token Alpha"
													},
													"src": "2062:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "2062:26:5"
											},
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 463,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "41505461",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2108:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_0a2f01a0dab0bc701296f0c3f63e7ad52ee1199b11b2f8a8c7434d24080910b3",
															"typeString": "literal_string \"APTa\""
														},
														"value": "APTa"
													},
													"src": "2098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "2098:16:5"
											},
											{
												"expression": {
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 467,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "2124:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 470,
														"indexExpression": {
															"expression": {
																"id": 468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2134:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2138:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2134:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2124:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 471,
														"name": "_initAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "2148:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2124:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "2124:35:5"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "1823:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 475,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 455,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2040:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2044:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2040:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 457,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 454,
												"name": "Ownable",
												"nameLocations": [
													"2032:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2032:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2032:19:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "_initAmount",
												"nameLocation": "2019:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2011:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:21:5"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2052:0:5"
									},
									"scope": 938,
									"src": "1999:167:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "2291:29:5",
										"statements": [
											{
												"expression": {
													"id": 481,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 447,
													"src": "2308:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "2301:12:5"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "2172:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2240:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:2:5"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "2276:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2276:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:15:5"
									},
									"scope": 938,
									"src": "2231:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										381
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2495:31:5",
										"statements": [
											{
												"expression": {
													"id": 490,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 449,
													"src": "2512:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "2505:14:5"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "2326:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2442:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2448:2:5"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2480:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2480:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:15:5"
									},
									"scope": 938,
									"src": "2433:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3215:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3232:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 498,
												"id": 500,
												"nodeType": "Return",
												"src": "3225:9:5"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "2532:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3168:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3176:2:5"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "3208:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 496,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3208:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:7:5"
									},
									"scope": 938,
									"src": "3159:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										311
									],
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "3362:36:5",
										"statements": [
											{
												"expression": {
													"id": 508,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 445,
													"src": "3379:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 507,
												"id": 509,
												"nodeType": "Return",
												"src": "3372:19:5"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "3247:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3310:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3321:2:5"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "3353:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3352:9:5"
									},
									"scope": 938,
									"src": "3301:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										319
									],
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "3530:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 519,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "3547:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 521,
													"indexExpression": {
														"id": 520,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3557:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3547:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 518,
												"id": 522,
												"nodeType": "Return",
												"src": "3540:25:5"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "3404:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3465:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3483:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "3475:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3474:17:5"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "3521:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:9:5"
									},
									"scope": 938,
									"src": "3456:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										329
									],
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "3842:103:5",
										"statements": [
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3860:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "3852:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3852:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 536,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "3868:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3868:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3852:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "3900:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3907:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3911:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "3890:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "3890:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3934:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 533,
												"id": 546,
												"nodeType": "Return",
												"src": "3927:11:5"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "3578:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3776:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3793:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3785:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3785:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3805:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3797:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3797:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3784:27:5"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "3836:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3836:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:6:5"
									},
									"scope": 938,
									"src": "3767:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										339
									],
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "4092:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 558,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "4109:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 560,
														"indexExpression": {
															"id": 559,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "4121:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4109:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 562,
													"indexExpression": {
														"id": 561,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "4128:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4109:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 557,
												"id": 563,
												"nodeType": "Return",
												"src": "4102:34:5"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "3951:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4012:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4030:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4022:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4037:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:32:5"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4083:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4083:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4082:9:5"
									},
									"scope": 938,
									"src": "4003:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										349
									],
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "4529:107:5",
										"statements": [
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4547:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 588,
														"src": "4539:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 575,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4539:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 577,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "4555:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "4586:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4593:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4602:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															829,
															889
														],
														"referencedDeclaration": 829,
														"src": "4577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4577:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "4577:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4625:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 574,
												"id": 587,
												"nodeType": "Return",
												"src": "4618:11:5"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "4149:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4459:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4475:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "4467:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4492:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "4484:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4484:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4466:32:5"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "4523:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4523:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:6:5"
									},
									"scope": 938,
									"src": "4450:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "5289:151:5",
										"statements": [
											{
												"assignments": [
													602
												],
												"declarations": [
													{
														"constant": false,
														"id": 602,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5307:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 620,
														"src": "5299:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 601,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 603,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "5317:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5317:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 607,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "5355:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "5361:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "5370:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 606,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "5339:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5339:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "5339:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 613,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "5396:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "5402:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "5406:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 612,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "5386:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5386:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "5386:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5429:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 600,
												"id": 619,
												"nodeType": "Return",
												"src": "5422:11:5"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "4642:549:5",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5205:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5226:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "5218:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5240:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "5232:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "5244:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5217:41:5"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "5283:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:5"
									},
									"scope": 938,
									"src": "5196:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "5882:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 631,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "5896:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5912:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5904:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 632,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5904:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5904:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5896:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 645,
												"nodeType": "IfStatement",
												"src": "5892:86:5",
												"trueBody": {
													"id": 644,
													"nodeType": "Block",
													"src": "5916:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5964:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5956:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 638,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5956:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5956:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 637,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5937:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5937:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 643,
															"nodeType": "RevertStatement",
															"src": "5930:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 646,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "5991:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6005:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5997:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 647,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5997:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5997:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5991:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 660,
												"nodeType": "IfStatement",
												"src": "5987:86:5",
												"trueBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "6009:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6059:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6051:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 653,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6051:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6051:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 652,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "6030:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6030:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 658,
															"nodeType": "RevertStatement",
															"src": "6023:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "6090:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 663,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "6096:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "6100:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 661,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "6082:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6082:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "6082:24:5"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "5446:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5822:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5840:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "5832:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5854:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "5846:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5846:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5866:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "5858:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5858:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:41:5"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5882:0:5"
									},
									"scope": 938,
									"src": "5813:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "6503:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "6517:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6533:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6525:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 679,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6525:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6525:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6517:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "6691:362:5",
													"statements": [
														{
															"assignments": [
																690
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 690,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6713:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 715,
																	"src": "6705:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 689,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6705:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 694,
															"initialValue": {
																"baseExpression": {
																	"id": 691,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "6727:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 693,
																"indexExpression": {
																	"id": 692,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "6737:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6727:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6705:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 695,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "6760:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 696,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6774:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6760:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 705,
															"nodeType": "IfStatement",
															"src": "6756:115:5",
															"trueBody": {
																"id": 704,
																"nodeType": "Block",
																"src": "6781:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 699,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 671,
																					"src": "6831:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 700,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 690,
																					"src": "6837:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 701,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6850:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 698,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6806:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6806:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 703,
																		"nodeType": "RevertStatement",
																		"src": "6799:57:5"
																	}
																]
															}
														},
														{
															"id": 714,
															"nodeType": "UncheckedBlock",
															"src": "6884:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 706,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "6991:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 708,
																			"indexExpression": {
																				"id": 707,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 671,
																				"src": "7001:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6991:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 709,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 690,
																				"src": "7009:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 710,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 675,
																				"src": "7023:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7009:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6991:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 713,
																	"nodeType": "ExpressionStatement",
																	"src": "6991:37:5"
																}
															]
														}
													]
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6513:540:5",
												"trueBody": {
													"id": 688,
													"nodeType": "Block",
													"src": "6537:148:5",
													"statements": [
														{
															"expression": {
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 684,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "6653:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 685,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6669:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6653:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 687,
															"nodeType": "ExpressionStatement",
															"src": "6653:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "7067:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7081:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7073:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7073:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7073:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7067:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "7282:206:5",
													"statements": [
														{
															"id": 735,
															"nodeType": "UncheckedBlock",
															"src": "7296:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 729,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "7441:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 731,
																			"indexExpression": {
																				"id": 730,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 673,
																				"src": "7451:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7441:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 732,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 675,
																			"src": "7458:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7441:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 734,
																	"nodeType": "ExpressionStatement",
																	"src": "7441:22:5"
																}
															]
														}
													]
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "7063:425:5",
												"trueBody": {
													"id": 728,
													"nodeType": "Block",
													"src": "7085:191:5",
													"statements": [
														{
															"id": 727,
															"nodeType": "UncheckedBlock",
															"src": "7099:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 723,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "7230:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 724,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 675,
																			"src": "7246:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7230:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 726,
																	"nodeType": "ExpressionStatement",
																	"src": "7230:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 739,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "7512:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "7518:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "7522:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 738,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "7503:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7503:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "EmitStatement",
												"src": "7498:30:5"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "6119:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6437:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6453:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "6445:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6445:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6467:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "6459:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6459:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6479:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "6471:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6471:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6444:41:5"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6503:0:5"
									},
									"scope": 938,
									"src": "6428:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "7934:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 753,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "7948:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7967:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7959:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 754,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7959:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7959:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7948:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 767,
												"nodeType": "IfStatement",
												"src": "7944:91:5",
												"trueBody": {
													"id": 766,
													"nodeType": "Block",
													"src": "7971:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8021:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8013:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 760,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8013:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8013:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 759,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7992:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7992:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 765,
															"nodeType": "RevertStatement",
															"src": "7985:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8060:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8052:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8052:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8052:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "8064:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8073:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "8044:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8044:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "8044:35:5"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "7541:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7887:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7901:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "7893:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7918:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "7910:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7910:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7892:32:5"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7934:0:5"
									},
									"scope": 938,
									"src": "7878:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "8460:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 786,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "8474:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8493:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8485:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 787,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8485:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8485:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8474:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8470:89:5",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "8497:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8545:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8537:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8537:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8537:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8518:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8518:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "8511:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "8576:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8593:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8585:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 803,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8585:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8585:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "8597:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 801,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "8568:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8568:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "8568:35:5"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "8092:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8413:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8427:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "8419:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8419:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8444:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "8436:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8436:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8418:32:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8460:0:5"
									},
									"scope": 938,
									"src": "8404:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "9220:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 822,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "9239:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "9246:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "9255:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9262:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 821,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															829,
															889
														],
														"referencedDeclaration": 889,
														"src": "9230:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9230:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "9230:37:5"
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "8616:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9155:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9172:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "9164:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9164:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9187:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "9179:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9204:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "9196:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9196:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9163:47:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9220:0:5"
									},
									"scope": 938,
									"src": "9146:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "10204:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 841,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "10218:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10235:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10227:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 842,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10227:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10227:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10218:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 855,
												"nodeType": "IfStatement",
												"src": "10214:89:5",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "10239:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10281:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 848,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10281:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10281:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 847,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10260:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10260:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 853,
															"nodeType": "RevertStatement",
															"src": "10253:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "10316:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10335:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10327:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 857,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10327:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10327:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10316:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 870,
												"nodeType": "IfStatement",
												"src": "10312:90:5",
												"trueBody": {
													"id": 869,
													"nodeType": "Block",
													"src": "10339:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10388:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10380:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 863,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10380:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10380:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 862,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10360:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10360:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 868,
															"nodeType": "RevertStatement",
															"src": "10353:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 871,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "10411:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 874,
															"indexExpression": {
																"id": 872,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 832,
																"src": "10423:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10411:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 875,
														"indexExpression": {
															"id": 873,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "10430:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10411:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 876,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "10441:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10411:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "10411:35:5"
											},
											{
												"condition": {
													"id": 879,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 838,
													"src": "10460:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 887,
												"nodeType": "IfStatement",
												"src": "10456:76:5",
												"trueBody": {
													"id": 886,
													"nodeType": "Block",
													"src": "10471:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 881,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "10499:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 882,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "10506:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 883,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 836,
																		"src": "10515:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 880,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "10490:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10490:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 885,
															"nodeType": "EmitStatement",
															"src": "10485:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "9280:821:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10115:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10132:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "10124:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10124:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10147:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "10139:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10164:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "10156:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10156:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10176:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "10171:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10171:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10123:63:5"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10204:0:5"
									},
									"scope": 938,
									"src": "10106:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "10909:388:5",
										"statements": [
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10927:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 936,
														"src": "10919:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10919:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [
														{
															"id": 902,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "10956:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "10963:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 901,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "10946:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10946:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10919:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 906,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "10985:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11010:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 908,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11010:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 907,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11005:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11005:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11019:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11005:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10985:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 935,
												"nodeType": "IfStatement",
												"src": "10981:310:5",
												"trueBody": {
													"id": 934,
													"nodeType": "Block",
													"src": "11024:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 913,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "11042:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 914,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "11061:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11042:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 923,
															"nodeType": "IfStatement",
															"src": "11038:130:5",
															"trueBody": {
																"id": 922,
																"nodeType": "Block",
																"src": "11068:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 917,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "11120:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 918,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 900,
																					"src": "11129:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 919,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 896,
																					"src": "11147:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 916,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "11093:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11093:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 921,
																		"nodeType": "RevertStatement",
																		"src": "11086:67:5"
																	}
																]
															}
														},
														{
															"id": 933,
															"nodeType": "UncheckedBlock",
															"src": "11181:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 925,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 892,
																				"src": "11218:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 926,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "11225:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 927,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 900,
																					"src": "11234:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 928,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 896,
																					"src": "11253:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11234:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 930,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11260:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 924,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				829,
																				889
																			],
																			"referencedDeclaration": 889,
																			"src": "11209:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11209:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 932,
																	"nodeType": "ExpressionStatement",
																	"src": "11209:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "10544:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10829:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10853:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "10845:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10845:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10868:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "10860:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10885:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "10877:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10877:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10844:47:5"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10909:0:5"
									},
									"scope": 938,
									"src": "10820:477:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 939,
							"src": "1500:9799:5",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								296,
								305
							]
						}
					],
					"src": "32:11267:5"
				},
				"id": 5
			}
		}
	}
}